
Freqref.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000018e  00800200  000013d6  0000146a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000013d6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001b9  0080038e  0080038e  000015f8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000015f8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001654  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000458  00000000  00000000  00001698  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004ae6  00000000  00000000  00001af0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001884  00000000  00000000  000065d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001ef5  00000000  00000000  00007e5a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000af4  00000000  00000000  00009d50  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000184f  00000000  00000000  0000a844  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002415  00000000  00000000  0000c093  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000398  00000000  00000000  0000e4a8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	fe c2       	rjmp	.+1532   	; 0x65e <__vector_24>
      62:	00 00       	nop
      64:	76 c3       	rjmp	.+1772   	; 0x752 <__vector_25>
      66:	00 00       	nop
      68:	9c c3       	rjmp	.+1848   	; 0x7a2 <__vector_26>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	87 c2       	rjmp	.+1294   	; 0x588 <__vector_30>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	d7 c3       	rjmp	.+1966   	; 0x840 <__vector_36>
      92:	00 00       	nop
      94:	fe c3       	rjmp	.+2044   	; 0x892 <__vector_37>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	eb c5       	rjmp	.+3030   	; 0xc80 <__vector_42>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	f8 c5       	rjmp	.+3056   	; 0xcae <__vector_47>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	70 c4       	rjmp	.+2272   	; 0x9ae <__vector_51>
      ce:	00 00       	nop
      d0:	97 c4       	rjmp	.+2350   	; 0xa00 <__vector_52>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	e2 c4       	rjmp	.+2500   	; 0xa9e <__vector_54>
      da:	00 00       	nop
      dc:	09 c5       	rjmp	.+2578   	; 0xaf0 <__vector_55>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	13 e0       	ldi	r17, 0x03	; 3
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e6 ed       	ldi	r30, 0xD6	; 214
      fc:	f3 e1       	ldi	r31, 0x13	; 19
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	ae 38       	cpi	r26, 0x8E	; 142
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	25 e0       	ldi	r18, 0x05	; 5
     110:	ae e8       	ldi	r26, 0x8E	; 142
     112:	b3 e0       	ldi	r27, 0x03	; 3
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a7 34       	cpi	r26, 0x47	; 71
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	15 d6       	rcall	.+3114   	; 0xd4a <main>
     120:	0c 94 e9 09 	jmp	0x13d2	; 0x13d2 <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
**/
void atmel_start_init(void)
{
     126:	ad c1       	rjmp	.+858    	; 0x482 <system_init>
     128:	08 95       	ret

0000012a <printPacket>:
		0xC0, // CK_A
		0x7E, // CK_B
	};

	sendPacket(packet, sizeof(packet));
}
     12a:	6f 92       	push	r6
     12c:	7f 92       	push	r7
     12e:	8f 92       	push	r8
     130:	9f 92       	push	r9
     132:	af 92       	push	r10
     134:	bf 92       	push	r11
     136:	cf 92       	push	r12
     138:	df 92       	push	r13
     13a:	ef 92       	push	r14
     13c:	ff 92       	push	r15
     13e:	0f 93       	push	r16
     140:	1f 93       	push	r17
     142:	cf 93       	push	r28
     144:	df 93       	push	r29
     146:	00 d0       	rcall	.+0      	; 0x148 <printPacket+0x1e>
     148:	cd b7       	in	r28, 0x3d	; 61
     14a:	de b7       	in	r29, 0x3e	; 62
     14c:	66 23       	and	r22, r22
     14e:	b1 f1       	breq	.+108    	; 0x1bc <printPacket+0x92>
     150:	68 2e       	mov	r6, r24
     152:	79 2e       	mov	r7, r25
     154:	88 24       	eor	r8, r8
     156:	8a 94       	dec	r8
     158:	86 0e       	add	r8, r22
     15a:	91 2c       	mov	r9, r1
     15c:	8f ef       	ldi	r24, 0xFF	; 255
     15e:	88 1a       	sub	r8, r24
     160:	98 0a       	sbc	r9, r24
     162:	00 e0       	ldi	r16, 0x00	; 0
     164:	10 e0       	ldi	r17, 0x00	; 0
     166:	0f 2e       	mov	r0, r31
     168:	f7 eb       	ldi	r31, 0xB7	; 183
     16a:	cf 2e       	mov	r12, r31
     16c:	f2 e0       	ldi	r31, 0x02	; 2
     16e:	df 2e       	mov	r13, r31
     170:	f0 2d       	mov	r31, r0
     172:	fe 01       	movw	r30, r28
     174:	31 96       	adiw	r30, 0x01	; 1
     176:	7f 01       	movw	r14, r30
     178:	a6 2e       	mov	r10, r22
     17a:	b1 2c       	mov	r11, r1
     17c:	f1 e0       	ldi	r31, 0x01	; 1
     17e:	af 1a       	sub	r10, r31
     180:	b1 08       	sbc	r11, r1
     182:	f3 01       	movw	r30, r6
     184:	81 91       	ld	r24, Z+
     186:	3f 01       	movw	r6, r30
     188:	1f 92       	push	r1
     18a:	8f 93       	push	r24
     18c:	df 92       	push	r13
     18e:	cf 92       	push	r12
     190:	ff 92       	push	r15
     192:	ef 92       	push	r14
     194:	43 d6       	rcall	.+3206   	; 0xe1c <sprintf>
     196:	ff 92       	push	r15
     198:	ef 92       	push	r14
     19a:	f8 d5       	rcall	.+3056   	; 0xd8c <printf>
     19c:	0f b6       	in	r0, 0x3f	; 63
     19e:	f8 94       	cli
     1a0:	de bf       	out	0x3e, r29	; 62
     1a2:	0f be       	out	0x3f, r0	; 63
     1a4:	cd bf       	out	0x3d, r28	; 61
     1a6:	a0 16       	cp	r10, r16
     1a8:	b1 06       	cpc	r11, r17
     1aa:	19 f0       	breq	.+6      	; 0x1b2 <printPacket+0x88>
     1ac:	80 e2       	ldi	r24, 0x20	; 32
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	00 d6       	rcall	.+3072   	; 0xdb2 <putchar>
     1b2:	0f 5f       	subi	r16, 0xFF	; 255
     1b4:	1f 4f       	sbci	r17, 0xFF	; 255
     1b6:	08 15       	cp	r16, r8
     1b8:	19 05       	cpc	r17, r9
     1ba:	19 f7       	brne	.-58     	; 0x182 <printPacket+0x58>
     1bc:	86 e6       	ldi	r24, 0x66	; 102
     1be:	93 e0       	ldi	r25, 0x03	; 3
     1c0:	9f 93       	push	r25
     1c2:	8f 93       	push	r24
     1c4:	e3 d5       	rcall	.+3014   	; 0xd8c <printf>
     1c6:	0f 90       	pop	r0
     1c8:	0f 90       	pop	r0
     1ca:	0f 90       	pop	r0
     1cc:	0f 90       	pop	r0
     1ce:	0f 90       	pop	r0
     1d0:	df 91       	pop	r29
     1d2:	cf 91       	pop	r28
     1d4:	1f 91       	pop	r17
     1d6:	0f 91       	pop	r16
     1d8:	ff 90       	pop	r15
     1da:	ef 90       	pop	r14
     1dc:	df 90       	pop	r13
     1de:	cf 90       	pop	r12
     1e0:	bf 90       	pop	r11
     1e2:	af 90       	pop	r10
     1e4:	9f 90       	pop	r9
     1e6:	8f 90       	pop	r8
     1e8:	7f 90       	pop	r7
     1ea:	6f 90       	pop	r6
     1ec:	08 95       	ret

000001ee <sendPacket>:
     1ee:	df 92       	push	r13
     1f0:	ef 92       	push	r14
     1f2:	ff 92       	push	r15
     1f4:	0f 93       	push	r16
     1f6:	1f 93       	push	r17
     1f8:	cf 93       	push	r28
     1fa:	df 93       	push	r29
     1fc:	7c 01       	movw	r14, r24
     1fe:	d6 2e       	mov	r13, r22
     200:	66 23       	and	r22, r22
     202:	69 f0       	breq	.+26     	; 0x21e <sendPacket+0x30>
     204:	ec 01       	movw	r28, r24
     206:	0f ef       	ldi	r16, 0xFF	; 255
     208:	06 0f       	add	r16, r22
     20a:	10 e0       	ldi	r17, 0x00	; 0
     20c:	0f 5f       	subi	r16, 0xFF	; 255
     20e:	1f 4f       	sbci	r17, 0xFF	; 255
     210:	08 0f       	add	r16, r24
     212:	19 1f       	adc	r17, r25
     214:	89 91       	ld	r24, Y+
     216:	8f d3       	rcall	.+1822   	; 0x936 <USART_1_write>
     218:	c0 17       	cp	r28, r16
     21a:	d1 07       	cpc	r29, r17
     21c:	d9 f7       	brne	.-10     	; 0x214 <sendPacket+0x26>
     21e:	6d 2d       	mov	r22, r13
     220:	c7 01       	movw	r24, r14
     222:	83 df       	rcall	.-250    	; 0x12a <printPacket>
     224:	df 91       	pop	r29
     226:	cf 91       	pop	r28
     228:	1f 91       	pop	r17
     22a:	0f 91       	pop	r16
     22c:	ff 90       	pop	r15
     22e:	ef 90       	pop	r14
     230:	df 90       	pop	r13
     232:	08 95       	ret

00000234 <disableNmea>:
     234:	cf 92       	push	r12
     236:	df 92       	push	r13
     238:	ef 92       	push	r14
     23a:	ff 92       	push	r15
     23c:	0f 93       	push	r16
     23e:	1f 93       	push	r17
     240:	cf 93       	push	r28
     242:	df 93       	push	r29
     244:	cd b7       	in	r28, 0x3d	; 61
     246:	de b7       	in	r29, 0x3e	; 62
     248:	e3 97       	sbiw	r28, 0x33	; 51
     24a:	0f b6       	in	r0, 0x3f	; 63
     24c:	f8 94       	cli
     24e:	de bf       	out	0x3e, r29	; 62
     250:	0f be       	out	0x3f, r0	; 63
     252:	cd bf       	out	0x3d, r28	; 61
     254:	88 e2       	ldi	r24, 0x28	; 40
     256:	e3 e2       	ldi	r30, 0x23	; 35
     258:	f2 e0       	ldi	r31, 0x02	; 2
     25a:	de 01       	movw	r26, r28
     25c:	11 96       	adiw	r26, 0x01	; 1
     25e:	01 90       	ld	r0, Z+
     260:	0d 92       	st	X+, r0
     262:	8a 95       	dec	r24
     264:	e1 f7       	brne	.-8      	; 0x25e <disableNmea+0x2a>
     266:	8b e0       	ldi	r24, 0x0B	; 11
     268:	eb e4       	ldi	r30, 0x4B	; 75
     26a:	f2 e0       	ldi	r31, 0x02	; 2
     26c:	de 01       	movw	r26, r28
     26e:	99 96       	adiw	r26, 0x29	; 41
     270:	01 90       	ld	r0, Z+
     272:	0d 92       	st	X+, r0
     274:	8a 95       	dec	r24
     276:	e1 f7       	brne	.-8      	; 0x270 <disableNmea+0x3c>
     278:	ce 01       	movw	r24, r28
     27a:	01 96       	adiw	r24, 0x01	; 1
     27c:	7c 01       	movw	r14, r24
     27e:	6e 01       	movw	r12, r28
     280:	99 e2       	ldi	r25, 0x29	; 41
     282:	c9 0e       	add	r12, r25
     284:	d1 1c       	adc	r13, r1
     286:	8e 01       	movw	r16, r28
     288:	0e 5c       	subi	r16, 0xCE	; 206
     28a:	1f 4f       	sbci	r17, 0xFF	; 255
     28c:	14 c0       	rjmp	.+40     	; 0x2b6 <disableNmea+0x82>
     28e:	91 91       	ld	r25, Z+
     290:	8a a9       	ldd	r24, Y+50	; 0x32
     292:	89 0f       	add	r24, r25
     294:	8a ab       	std	Y+50, r24	; 0x32
     296:	9b a9       	ldd	r25, Y+51	; 0x33
     298:	89 0f       	add	r24, r25
     29a:	8b ab       	std	Y+51, r24	; 0x33
     29c:	e0 17       	cp	r30, r16
     29e:	f1 07       	cpc	r31, r17
     2a0:	b1 f7       	brne	.-20     	; 0x28e <disableNmea+0x5a>
     2a2:	6b e0       	ldi	r22, 0x0B	; 11
     2a4:	ce 01       	movw	r24, r28
     2a6:	89 96       	adiw	r24, 0x29	; 41
     2a8:	a2 df       	rcall	.-188    	; 0x1ee <sendPacket>
     2aa:	e2 e0       	ldi	r30, 0x02	; 2
     2ac:	ee 0e       	add	r14, r30
     2ae:	f1 1c       	adc	r15, r1
     2b0:	ce 14       	cp	r12, r14
     2b2:	df 04       	cpc	r13, r15
     2b4:	51 f0       	breq	.+20     	; 0x2ca <disableNmea+0x96>
     2b6:	f7 01       	movw	r30, r14
     2b8:	80 81       	ld	r24, Z
     2ba:	8f a7       	std	Y+47, r24	; 0x2f
     2bc:	81 81       	ldd	r24, Z+1	; 0x01
     2be:	88 ab       	std	Y+48, r24	; 0x30
     2c0:	1a aa       	std	Y+50, r1	; 0x32
     2c2:	1b aa       	std	Y+51, r1	; 0x33
     2c4:	fe 01       	movw	r30, r28
     2c6:	bb 96       	adiw	r30, 0x2b	; 43
     2c8:	e2 cf       	rjmp	.-60     	; 0x28e <disableNmea+0x5a>
     2ca:	e3 96       	adiw	r28, 0x33	; 51
     2cc:	0f b6       	in	r0, 0x3f	; 63
     2ce:	f8 94       	cli
     2d0:	de bf       	out	0x3e, r29	; 62
     2d2:	0f be       	out	0x3f, r0	; 63
     2d4:	cd bf       	out	0x3d, r28	; 61
     2d6:	df 91       	pop	r29
     2d8:	cf 91       	pop	r28
     2da:	1f 91       	pop	r17
     2dc:	0f 91       	pop	r16
     2de:	ff 90       	pop	r15
     2e0:	ef 90       	pop	r14
     2e2:	df 90       	pop	r13
     2e4:	cf 90       	pop	r12
     2e6:	08 95       	ret

000002e8 <changeFrequency>:

// Function, sending packet to the receiver to change frequency to 100 ms
void changeFrequency() {
     2e8:	cf 93       	push	r28
     2ea:	df 93       	push	r29
     2ec:	cd b7       	in	r28, 0x3d	; 61
     2ee:	de b7       	in	r29, 0x3e	; 62
     2f0:	2e 97       	sbiw	r28, 0x0e	; 14
     2f2:	0f b6       	in	r0, 0x3f	; 63
     2f4:	f8 94       	cli
     2f6:	de bf       	out	0x3e, r29	; 62
     2f8:	0f be       	out	0x3f, r0	; 63
     2fa:	cd bf       	out	0x3d, r28	; 61
	// CFG-RATE packet
	byte packet[] = {
     2fc:	8e e0       	ldi	r24, 0x0E	; 14
     2fe:	e2 e7       	ldi	r30, 0x72	; 114
     300:	f2 e0       	ldi	r31, 0x02	; 2
     302:	de 01       	movw	r26, r28
     304:	11 96       	adiw	r26, 0x01	; 1
     306:	01 90       	ld	r0, Z+
     308:	0d 92       	st	X+, r0
     30a:	8a 95       	dec	r24
     30c:	e1 f7       	brne	.-8      	; 0x306 <changeFrequency+0x1e>
		0x00, // payload
		0x7A, // CK_A
		0x12, // CK_B
	};

	sendPacket(packet, sizeof(packet));
     30e:	6e e0       	ldi	r22, 0x0E	; 14
     310:	ce 01       	movw	r24, r28
     312:	01 96       	adiw	r24, 0x01	; 1
     314:	6c df       	rcall	.-296    	; 0x1ee <sendPacket>
}
     316:	2e 96       	adiw	r28, 0x0e	; 14
     318:	0f b6       	in	r0, 0x3f	; 63
     31a:	f8 94       	cli
     31c:	de bf       	out	0x3e, r29	; 62
     31e:	0f be       	out	0x3f, r0	; 63
     320:	cd bf       	out	0x3d, r28	; 61
     322:	df 91       	pop	r29
     324:	cf 91       	pop	r28
     326:	08 95       	ret

00000328 <disableUnnecessaryChannels>:

// Function, sending packet to the receiver to disable unnecessary channels
void disableUnnecessaryChannels() {
     328:	cf 93       	push	r28
     32a:	df 93       	push	r29
     32c:	cd b7       	in	r28, 0x3d	; 61
     32e:	de b7       	in	r29, 0x3e	; 62
     330:	ac 97       	sbiw	r28, 0x2c	; 44
     332:	0f b6       	in	r0, 0x3f	; 63
     334:	f8 94       	cli
     336:	de bf       	out	0x3e, r29	; 62
     338:	0f be       	out	0x3f, r0	; 63
     33a:	cd bf       	out	0x3d, r28	; 61
	// CFG-GNSS packet
	byte packet[] = {
     33c:	8c e2       	ldi	r24, 0x2C	; 44
     33e:	e0 e8       	ldi	r30, 0x80	; 128
     340:	f2 e0       	ldi	r31, 0x02	; 2
     342:	de 01       	movw	r26, r28
     344:	11 96       	adiw	r26, 0x01	; 1
     346:	01 90       	ld	r0, Z+
     348:	0d 92       	st	X+, r0
     34a:	8a 95       	dec	r24
     34c:	e1 f7       	brne	.-8      	; 0x346 <disableUnnecessaryChannels+0x1e>

		0xA4, // CK_A
		0x25, // CK_B
	};

	sendPacket(packet, sizeof(packet));
     34e:	6c e2       	ldi	r22, 0x2C	; 44
     350:	ce 01       	movw	r24, r28
     352:	01 96       	adiw	r24, 0x01	; 1
     354:	4c df       	rcall	.-360    	; 0x1ee <sendPacket>
}
     356:	ac 96       	adiw	r28, 0x2c	; 44
     358:	0f b6       	in	r0, 0x3f	; 63
     35a:	f8 94       	cli
     35c:	de bf       	out	0x3e, r29	; 62
     35e:	0f be       	out	0x3f, r0	; 63
     360:	cd bf       	out	0x3d, r28	; 61
     362:	df 91       	pop	r29
     364:	cf 91       	pop	r28
     366:	08 95       	ret

00000368 <enableNavPvt>:

// Function, sending packet to the receiver to enable NAV-PVT messages
void enableNavPvt() {
     368:	cf 93       	push	r28
     36a:	df 93       	push	r29
     36c:	cd b7       	in	r28, 0x3d	; 61
     36e:	de b7       	in	r29, 0x3e	; 62
     370:	2b 97       	sbiw	r28, 0x0b	; 11
     372:	0f b6       	in	r0, 0x3f	; 63
     374:	f8 94       	cli
     376:	de bf       	out	0x3e, r29	; 62
     378:	0f be       	out	0x3f, r0	; 63
     37a:	cd bf       	out	0x3d, r28	; 61
	// CFG-MSG packet
	byte packet[] = {
     37c:	8b e0       	ldi	r24, 0x0B	; 11
     37e:	ec ea       	ldi	r30, 0xAC	; 172
     380:	f2 e0       	ldi	r31, 0x02	; 2
     382:	de 01       	movw	r26, r28
     384:	11 96       	adiw	r26, 0x01	; 1
     386:	01 90       	ld	r0, Z+
     388:	0d 92       	st	X+, r0
     38a:	8a 95       	dec	r24
     38c:	e1 f7       	brne	.-8      	; 0x386 <enableNavPvt+0x1e>
		0x01, // payload
		0x13, // CK_A
		0x51, // CK_B
	};

	sendPacket(packet, sizeof(packet));
     38e:	6b e0       	ldi	r22, 0x0B	; 11
     390:	ce 01       	movw	r24, r28
     392:	01 96       	adiw	r24, 0x01	; 1
     394:	2c df       	rcall	.-424    	; 0x1ee <sendPacket>
}
     396:	2b 96       	adiw	r28, 0x0b	; 11
     398:	0f b6       	in	r0, 0x3f	; 63
     39a:	f8 94       	cli
     39c:	de bf       	out	0x3e, r29	; 62
     39e:	0f be       	out	0x3f, r0	; 63
     3a0:	cd bf       	out	0x3d, r28	; 61
     3a2:	df 91       	pop	r29
     3a4:	cf 91       	pop	r28
     3a6:	08 95       	ret

000003a8 <loop>:
     3a8:	a6 d2       	rcall	.+1356   	; 0x8f6 <USART_1_is_rx_ready>
     3aa:	88 23       	and	r24, r24
     3ac:	11 f0       	breq	.+4      	; 0x3b2 <loop+0xa>
     3ae:	aa d2       	rcall	.+1364   	; 0x904 <USART_1_read>
     3b0:	f1 d3       	rcall	.+2018   	; 0xb94 <USART_3_write>
     3b2:	d0 d3       	rcall	.+1952   	; 0xb54 <USART_3_is_rx_ready>
     3b4:	88 23       	and	r24, r24
     3b6:	11 f0       	breq	.+4      	; 0x3bc <loop+0x14>
     3b8:	d4 d3       	rcall	.+1960   	; 0xb62 <USART_3_read>
     3ba:	bd c2       	rjmp	.+1402   	; 0x936 <USART_1_write>
     3bc:	08 95       	ret

000003be <setupneo>:
     3be:	8c eb       	ldi	r24, 0xBC	; 188
     3c0:	92 e0       	ldi	r25, 0x02	; 2
     3c2:	9f 93       	push	r25
     3c4:	8f 93       	push	r24
     3c6:	e2 d4       	rcall	.+2500   	; 0xd8c <printf>
     3c8:	35 df       	rcall	.-406    	; 0x234 <disableNmea>
     3ca:	89 ed       	ldi	r24, 0xD9	; 217
     3cc:	92 e0       	ldi	r25, 0x02	; 2
     3ce:	9f 93       	push	r25
     3d0:	8f 93       	push	r24
     3d2:	dc d4       	rcall	.+2488   	; 0xd8c <printf>
     3d4:	89 df       	rcall	.-238    	; 0x2e8 <changeFrequency>
     3d6:	85 e0       	ldi	r24, 0x05	; 5
     3d8:	93 e0       	ldi	r25, 0x03	; 3
     3da:	f0 d4       	rcall	.+2528   	; 0xdbc <puts>
     3dc:	a5 df       	rcall	.-182    	; 0x328 <disableUnnecessaryChannels>
     3de:	88 e2       	ldi	r24, 0x28	; 40
     3e0:	93 e0       	ldi	r25, 0x03	; 3
     3e2:	9f 93       	push	r25
     3e4:	8f 93       	push	r24
     3e6:	d2 d4       	rcall	.+2468   	; 0xd8c <printf>
     3e8:	bf df       	rcall	.-130    	; 0x368 <enableNavPvt>
     3ea:	87 e4       	ldi	r24, 0x47	; 71
     3ec:	93 e0       	ldi	r25, 0x03	; 3
     3ee:	9f 93       	push	r25
     3f0:	8f 93       	push	r24
     3f2:	cc d4       	rcall	.+2456   	; 0xd8c <printf>
     3f4:	84 e6       	ldi	r24, 0x64	; 100
     3f6:	90 e0       	ldi	r25, 0x00	; 0
     3f8:	13 d4       	rcall	.+2086   	; 0xc20 <fastdelay_ms>
     3fa:	8d b7       	in	r24, 0x3d	; 61
     3fc:	9e b7       	in	r25, 0x3e	; 62
     3fe:	08 96       	adiw	r24, 0x08	; 8
     400:	0f b6       	in	r0, 0x3f	; 63
     402:	f8 94       	cli
     404:	9e bf       	out	0x3e, r25	; 62
     406:	0f be       	out	0x3f, r0	; 63
     408:	8d bf       	out	0x3d, r24	; 61
     40a:	ce df       	rcall	.-100    	; 0x3a8 <loop>
     40c:	fe cf       	rjmp	.-4      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>

0000040e <SPI_0_initialization>:
}

void TIMER_1_initialization(void)
{

	TIMER_1_init();
     40e:	23 98       	cbi	0x04, 3	; 4
     410:	2b 98       	cbi	0x05, 3	; 5
     412:	22 9a       	sbi	0x04, 2	; 4
     414:	2a 98       	cbi	0x05, 2	; 5
     416:	21 9a       	sbi	0x04, 1	; 4
     418:	29 98       	cbi	0x05, 1	; 5
     41a:	20 9a       	sbi	0x04, 0	; 4
     41c:	28 98       	cbi	0x05, 0	; 5
     41e:	12 c1       	rjmp	.+548    	; 0x644 <SPI_0_init>
     420:	08 95       	ret

00000422 <USART_0_initialization>:
 */
static inline void PORTE_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRE &= ~(1 << pin);
     422:	68 98       	cbi	0x0d, 0	; 13
		DDRE &= ~(1 << pin);

		PORTE |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTE &= ~(1 << pin);
     424:	70 98       	cbi	0x0e, 0	; 14
	switch (direction) {
	case PORT_DIR_IN:
		DDRE &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRE |= 1 << pin;
     426:	69 9a       	sbi	0x0d, 1	; 13
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	USART_0_init();
     428:	71 98       	cbi	0x0e, 1	; 14
     42a:	ed c1       	rjmp	.+986    	; 0x806 <USART_0_init>
     42c:	08 95       	ret

0000042e <USART_1_initialization>:
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
     42e:	52 98       	cbi	0x0a, 2	; 10
		DDRD &= ~(1 << pin);

		PORTD |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTD &= ~(1 << pin);
     430:	5a 98       	cbi	0x0b, 2	; 11
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRD |= 1 << pin;
     432:	53 9a       	sbi	0x0a, 3	; 10
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	USART_1_init();
     434:	5b 98       	cbi	0x0b, 3	; 11
     436:	9e c2       	rjmp	.+1340   	; 0x974 <USART_1_init>
     438:	08 95       	ret

0000043a <USART_2_initialization>:
 */
static inline void PORTH_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRH &= ~(1 << pin);
     43a:	a1 e0       	ldi	r26, 0x01	; 1
     43c:	b1 e0       	ldi	r27, 0x01	; 1
     43e:	8c 91       	ld	r24, X
     440:	8e 7f       	andi	r24, 0xFE	; 254
     442:	8c 93       	st	X, r24
		DDRH &= ~(1 << pin);

		PORTH |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTH &= ~(1 << pin);
     444:	e2 e0       	ldi	r30, 0x02	; 2
     446:	f1 e0       	ldi	r31, 0x01	; 1
     448:	80 81       	ld	r24, Z
     44a:	8e 7f       	andi	r24, 0xFE	; 254
     44c:	80 83       	st	Z, r24
	switch (direction) {
	case PORT_DIR_IN:
		DDRH &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRH |= 1 << pin;
     44e:	8c 91       	ld	r24, X
     450:	82 60       	ori	r24, 0x02	; 2
     452:	8c 93       	st	X, r24
static inline void PORTH_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTH |= 1 << pin;
	} else {
		PORTH &= ~(1 << pin);
     454:	80 81       	ld	r24, Z
     456:	8d 7f       	andi	r24, 0xFD	; 253
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	USART_2_init();
     458:	80 83       	st	Z, r24
     45a:	04 c3       	rjmp	.+1544   	; 0xa64 <USART_2_init>
     45c:	08 95       	ret

0000045e <USART_3_initialization>:
 */
static inline void PORTJ_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRJ &= ~(1 << pin);
     45e:	a4 e0       	ldi	r26, 0x04	; 4
     460:	b1 e0       	ldi	r27, 0x01	; 1
     462:	8c 91       	ld	r24, X
     464:	8e 7f       	andi	r24, 0xFE	; 254
     466:	8c 93       	st	X, r24
		DDRJ &= ~(1 << pin);

		PORTJ |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTJ &= ~(1 << pin);
     468:	e5 e0       	ldi	r30, 0x05	; 5
     46a:	f1 e0       	ldi	r31, 0x01	; 1
     46c:	80 81       	ld	r24, Z
     46e:	8e 7f       	andi	r24, 0xFE	; 254
     470:	80 83       	st	Z, r24
	switch (direction) {
	case PORT_DIR_IN:
		DDRJ &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRJ |= 1 << pin;
     472:	8c 91       	ld	r24, X
     474:	82 60       	ori	r24, 0x02	; 2
     476:	8c 93       	st	X, r24
static inline void PORTJ_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTJ |= 1 << pin;
	} else {
		PORTJ &= ~(1 << pin);
     478:	80 81       	ld	r24, Z
     47a:	8d 7f       	andi	r24, 0xFD	; 253
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	USART_3_init();
     47c:	80 83       	st	Z, r24
     47e:	ad c3       	rjmp	.+1882   	; 0xbda <USART_3_init>
     480:	08 95       	ret

00000482 <system_init>:
     482:	8f e3       	ldi	r24, 0x3F	; 63
     484:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x700065>
     488:	8f ee       	ldi	r24, 0xEF	; 239
     48a:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x700064>
     48e:	81 b1       	in	r24, 0x01	; 1
     490:	11 b8       	out	0x01, r1	; 1
     492:	82 b1       	in	r24, 0x02	; 2
     494:	8f ef       	ldi	r24, 0xFF	; 255
     496:	82 b9       	out	0x02, r24	; 2
     498:	94 b1       	in	r25, 0x04	; 4
     49a:	14 b8       	out	0x04, r1	; 4
     49c:	95 b1       	in	r25, 0x05	; 5
     49e:	85 b9       	out	0x05, r24	; 5
     4a0:	97 b1       	in	r25, 0x07	; 7
     4a2:	17 b8       	out	0x07, r1	; 7
     4a4:	98 b1       	in	r25, 0x08	; 8
     4a6:	88 b9       	out	0x08, r24	; 8
     4a8:	9a b1       	in	r25, 0x0a	; 10
     4aa:	1a b8       	out	0x0a, r1	; 10
     4ac:	9b b1       	in	r25, 0x0b	; 11
     4ae:	8b b9       	out	0x0b, r24	; 11
     4b0:	9d b1       	in	r25, 0x0d	; 13
     4b2:	1d b8       	out	0x0d, r1	; 13
     4b4:	9e b1       	in	r25, 0x0e	; 14
     4b6:	8e b9       	out	0x0e, r24	; 14
     4b8:	90 b3       	in	r25, 0x10	; 16
     4ba:	10 ba       	out	0x10, r1	; 16
     4bc:	91 b3       	in	r25, 0x11	; 17
     4be:	81 bb       	out	0x11, r24	; 17
     4c0:	93 b3       	in	r25, 0x13	; 19
     4c2:	90 7c       	andi	r25, 0xC0	; 192
     4c4:	93 bb       	out	0x13, r25	; 19
     4c6:	94 b3       	in	r25, 0x14	; 20
     4c8:	9f 63       	ori	r25, 0x3F	; 63
     4ca:	94 bb       	out	0x14, r25	; 20
     4cc:	e1 e0       	ldi	r30, 0x01	; 1
     4ce:	f1 e0       	ldi	r31, 0x01	; 1
     4d0:	90 81       	ld	r25, Z
     4d2:	10 82       	st	Z, r1
     4d4:	e2 e0       	ldi	r30, 0x02	; 2
     4d6:	f1 e0       	ldi	r31, 0x01	; 1
     4d8:	90 81       	ld	r25, Z
     4da:	80 83       	st	Z, r24
     4dc:	e4 e0       	ldi	r30, 0x04	; 4
     4de:	f1 e0       	ldi	r31, 0x01	; 1
     4e0:	90 81       	ld	r25, Z
     4e2:	10 82       	st	Z, r1
     4e4:	e5 e0       	ldi	r30, 0x05	; 5
     4e6:	f1 e0       	ldi	r31, 0x01	; 1
     4e8:	90 81       	ld	r25, Z
     4ea:	80 83       	st	Z, r24
     4ec:	e7 e0       	ldi	r30, 0x07	; 7
     4ee:	f1 e0       	ldi	r31, 0x01	; 1
     4f0:	90 81       	ld	r25, Z
     4f2:	10 82       	st	Z, r1
     4f4:	e8 e0       	ldi	r30, 0x08	; 8
     4f6:	f1 e0       	ldi	r31, 0x01	; 1
     4f8:	90 81       	ld	r25, Z
     4fa:	80 83       	st	Z, r24
     4fc:	aa e0       	ldi	r26, 0x0A	; 10
     4fe:	b1 e0       	ldi	r27, 0x01	; 1
     500:	9c 91       	ld	r25, X
     502:	1c 92       	st	X, r1
     504:	eb e0       	ldi	r30, 0x0B	; 11
     506:	f1 e0       	ldi	r31, 0x01	; 1
     508:	90 81       	ld	r25, Z
     50a:	80 83       	st	Z, r24
     50c:	0a 9a       	sbi	0x01, 2	; 1
     50e:	12 98       	cbi	0x02, 2	; 2
     510:	0b 9a       	sbi	0x01, 3	; 1
     512:	13 98       	cbi	0x02, 3	; 2
     514:	0c 9a       	sbi	0x01, 4	; 1
     516:	14 98       	cbi	0x02, 4	; 2
     518:	0d 9a       	sbi	0x01, 5	; 1
     51a:	15 98       	cbi	0x02, 5	; 2
     51c:	0e 9a       	sbi	0x01, 6	; 1
     51e:	16 98       	cbi	0x02, 6	; 2
     520:	0f 9a       	sbi	0x01, 7	; 1
     522:	17 98       	cbi	0x02, 7	; 2
     524:	38 98       	cbi	0x07, 0	; 7
     526:	40 98       	cbi	0x08, 0	; 8
     528:	39 98       	cbi	0x07, 1	; 7
     52a:	41 98       	cbi	0x08, 1	; 8
     52c:	3a 98       	cbi	0x07, 2	; 7
     52e:	42 98       	cbi	0x08, 2	; 8
     530:	3b 98       	cbi	0x07, 3	; 7
     532:	43 98       	cbi	0x08, 3	; 8
     534:	3c 98       	cbi	0x07, 4	; 7
     536:	44 98       	cbi	0x08, 4	; 8
     538:	3d 98       	cbi	0x07, 5	; 7
     53a:	45 98       	cbi	0x08, 5	; 8
     53c:	3e 98       	cbi	0x07, 6	; 7
     53e:	46 98       	cbi	0x08, 6	; 8
     540:	3f 98       	cbi	0x07, 7	; 7
     542:	47 98       	cbi	0x08, 7	; 8
     544:	8c 91       	ld	r24, X
     546:	81 60       	ori	r24, 0x01	; 1
     548:	8c 93       	st	X, r24
     54a:	80 81       	ld	r24, Z
     54c:	8e 7f       	andi	r24, 0xFE	; 254
     54e:	80 83       	st	Z, r24
     550:	8c 91       	ld	r24, X
     552:	82 60       	ori	r24, 0x02	; 2
     554:	8c 93       	st	X, r24
     556:	80 81       	ld	r24, Z
     558:	82 60       	ori	r24, 0x02	; 2
     55a:	80 83       	st	Z, r24
     55c:	8c 91       	ld	r24, X
     55e:	84 60       	ori	r24, 0x04	; 4
     560:	8c 93       	st	X, r24
     562:	80 81       	ld	r24, Z
     564:	84 60       	ori	r24, 0x04	; 4
     566:	80 83       	st	Z, r24
     568:	40 e0       	ldi	r20, 0x00	; 0
     56a:	60 e8       	ldi	r22, 0x80	; 128
     56c:	81 e6       	ldi	r24, 0x61	; 97
     56e:	90 e0       	ldi	r25, 0x00	; 0
     570:	61 d0       	rcall	.+194    	; 0x634 <protected_write_io>
     572:	13 be       	out	0x33, r1	; 51
     574:	15 be       	out	0x35, r1	; 53
     576:	58 d0       	rcall	.+176    	; 0x628 <FLASH_0_init>
     578:	4a df       	rcall	.-364    	; 0x40e <SPI_0_initialization>
     57a:	cb d0       	rcall	.+406    	; 0x712 <TIMER_0_init>
     57c:	d7 d0       	rcall	.+430    	; 0x72c <TIMER_1_init>
     57e:	51 df       	rcall	.-350    	; 0x422 <USART_0_initialization>
     580:	56 df       	rcall	.-340    	; 0x42e <USART_1_initialization>
     582:	5b df       	rcall	.-330    	; 0x43a <USART_2_initialization>
     584:	6c cf       	rjmp	.-296    	; 0x45e <USART_3_initialization>
     586:	08 95       	ret

00000588 <__vector_30>:
 *
 * \return Nothing.
 */
void FLASH_0_register_callback(eeprom_write_done_cb_t f)
{
	FLASH_0_desc.cb = f;
     588:	1f 92       	push	r1
     58a:	0f 92       	push	r0
     58c:	0f b6       	in	r0, 0x3f	; 63
     58e:	0f 92       	push	r0
     590:	11 24       	eor	r1, r1
     592:	0b b6       	in	r0, 0x3b	; 59
     594:	0f 92       	push	r0
     596:	2f 93       	push	r18
     598:	3f 93       	push	r19
     59a:	4f 93       	push	r20
     59c:	5f 93       	push	r21
     59e:	6f 93       	push	r22
     5a0:	7f 93       	push	r23
     5a2:	8f 93       	push	r24
     5a4:	9f 93       	push	r25
     5a6:	af 93       	push	r26
     5a8:	bf 93       	push	r27
     5aa:	ef 93       	push	r30
     5ac:	ff 93       	push	r31
     5ae:	80 91 93 03 	lds	r24, 0x0393	; 0x800393 <__data_end+0x5>
     5b2:	81 11       	cpse	r24, r1
     5b4:	0e c0       	rjmp	.+28     	; 0x5d2 <__vector_30+0x4a>
     5b6:	ee e8       	ldi	r30, 0x8E	; 142
     5b8:	f3 e0       	ldi	r31, 0x03	; 3
     5ba:	10 82       	st	Z, r1
     5bc:	fb 98       	cbi	0x1f, 3	; 31
     5be:	86 81       	ldd	r24, Z+6	; 0x06
     5c0:	97 81       	ldd	r25, Z+7	; 0x07
     5c2:	89 2b       	or	r24, r25
     5c4:	f1 f0       	breq	.+60     	; 0x602 <__vector_30+0x7a>
     5c6:	e0 91 94 03 	lds	r30, 0x0394	; 0x800394 <__data_end+0x6>
     5ca:	f0 91 95 03 	lds	r31, 0x0395	; 0x800395 <__data_end+0x7>
     5ce:	19 95       	eicall
     5d0:	18 c0       	rjmp	.+48     	; 0x602 <__vector_30+0x7a>
     5d2:	ee e8       	ldi	r30, 0x8E	; 142
     5d4:	f3 e0       	ldi	r31, 0x03	; 3
     5d6:	81 81       	ldd	r24, Z+1	; 0x01
     5d8:	92 81       	ldd	r25, Z+2	; 0x02
     5da:	9c 01       	movw	r18, r24
     5dc:	2f 5f       	subi	r18, 0xFF	; 255
     5de:	3f 4f       	sbci	r19, 0xFF	; 255
     5e0:	32 83       	std	Z+2, r19	; 0x02
     5e2:	21 83       	std	Z+1, r18	; 0x01
     5e4:	92 bd       	out	0x22, r25	; 34
     5e6:	81 bd       	out	0x21, r24	; 33
     5e8:	a3 81       	ldd	r26, Z+3	; 0x03
     5ea:	b4 81       	ldd	r27, Z+4	; 0x04
     5ec:	cd 01       	movw	r24, r26
     5ee:	01 96       	adiw	r24, 0x01	; 1
     5f0:	94 83       	std	Z+4, r25	; 0x04
     5f2:	83 83       	std	Z+3, r24	; 0x03
     5f4:	8c 91       	ld	r24, X
     5f6:	80 bd       	out	0x20, r24	; 32
     5f8:	85 81       	ldd	r24, Z+5	; 0x05
     5fa:	81 50       	subi	r24, 0x01	; 1
     5fc:	85 83       	std	Z+5, r24	; 0x05
     5fe:	fa 9a       	sbi	0x1f, 2	; 31
     600:	f9 9a       	sbi	0x1f, 1	; 31
     602:	ff 91       	pop	r31
     604:	ef 91       	pop	r30
     606:	bf 91       	pop	r27
     608:	af 91       	pop	r26
     60a:	9f 91       	pop	r25
     60c:	8f 91       	pop	r24
     60e:	7f 91       	pop	r23
     610:	6f 91       	pop	r22
     612:	5f 91       	pop	r21
     614:	4f 91       	pop	r20
     616:	3f 91       	pop	r19
     618:	2f 91       	pop	r18
     61a:	0f 90       	pop	r0
     61c:	0b be       	out	0x3b, r0	; 59
     61e:	0f 90       	pop	r0
     620:	0f be       	out	0x3f, r0	; 63
     622:	0f 90       	pop	r0
     624:	1f 90       	pop	r1
     626:	18 95       	reti

00000628 <FLASH_0_init>:
	//		 | 0 << RWWSRE /* Read-While-Write Section Enable: disabled */
	//		 | 0 << SIGRD /* Signature Row Read: disabled */
	//		 | 0 << RWWSB /* Read-While-Write Busy: disabled */
	//		 | 0 << SPMIE; /* SPM Interrupt Enable: disabled */

	FLASH_0_desc.cb = NULL;
     628:	10 92 95 03 	sts	0x0395, r1	; 0x800395 <__data_end+0x7>
     62c:	10 92 94 03 	sts	0x0394, r1	; 0x800394 <__data_end+0x6>
	return 0;
}
     630:	80 e0       	ldi	r24, 0x00	; 0
     632:	08 95       	ret

00000634 <protected_write_io>:
#if defined(__GNUC__)
	/*
	 * We need to disable interrupts globally before the protected
	 * sequence. In order to do that we must save SREG first.
	 */
	in      r18,    _SFR_IO_ADDR(SREG)
     634:	2f b7       	in	r18, 0x3f	; 63
	cli
     636:	f8 94       	cli
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
     638:	1b be       	out	0x3b, r1	; 59
#endif
	movw    r30, r24                // Load addr into Z
     63a:	fc 01       	movw	r30, r24
	st      Z, r22                  // Write protection bit to I/O register
     63c:	60 83       	st	Z, r22
	st      Z, r20                  // Write value to I/O register
     63e:	40 83       	st	Z, r20
	out     _SFR_IO_ADDR(SREG), r18
     640:	2f bf       	out	0x3f, r18	; 63

	ret                             // Return to caller
     642:	08 95       	ret

00000644 <SPI_0_init>:
                 after the previous one (i.e. data transfer phase
                 after control/command phase).
*/
void SPI_0_register_callback(spi_transfer_done_cb_t f)
{
	SPI_0_desc.cb = f;
     644:	e4 e6       	ldi	r30, 0x64	; 100
     646:	f0 e0       	ldi	r31, 0x00	; 0
     648:	80 81       	ld	r24, Z
     64a:	8b 7f       	andi	r24, 0xFB	; 251
     64c:	80 83       	st	Z, r24
     64e:	81 e5       	ldi	r24, 0x51	; 81
     650:	8c bd       	out	0x2c, r24	; 44
     652:	e6 e9       	ldi	r30, 0x96	; 150
     654:	f3 e0       	ldi	r31, 0x03	; 3
     656:	10 82       	st	Z, r1
     658:	16 82       	std	Z+6, r1	; 0x06
     65a:	15 82       	std	Z+5, r1	; 0x05
     65c:	08 95       	ret

0000065e <__vector_24>:
}

ISR(SPI_STC_vect)
{
     65e:	1f 92       	push	r1
     660:	0f 92       	push	r0
     662:	0f b6       	in	r0, 0x3f	; 63
     664:	0f 92       	push	r0
     666:	11 24       	eor	r1, r1
     668:	0b b6       	in	r0, 0x3b	; 59
     66a:	0f 92       	push	r0
     66c:	2f 93       	push	r18
     66e:	3f 93       	push	r19
     670:	4f 93       	push	r20
     672:	5f 93       	push	r21
     674:	6f 93       	push	r22
     676:	7f 93       	push	r23
     678:	8f 93       	push	r24
     67a:	9f 93       	push	r25
     67c:	af 93       	push	r26
     67e:	bf 93       	push	r27
     680:	cf 93       	push	r28
     682:	df 93       	push	r29
     684:	ef 93       	push	r30
     686:	ff 93       	push	r31
	/* SPI_0_desc.data points to array element
	   to write the received data to. The data to be transmitted
	   is in the next array element.
	*/
	uint8_t rdata = SPDR;
     688:	9e b5       	in	r25, 0x2e	; 46
	uint8_t wdata = 0;
	if (SPI_0_desc.type != SPI_WRITE) {
     68a:	80 91 9a 03 	lds	r24, 0x039A	; 0x80039a <SPI_0_desc+0x4>
     68e:	82 30       	cpi	r24, 0x02	; 2
     690:	11 f1       	breq	.+68     	; 0x6d6 <__vector_24+0x78>
		*SPI_0_desc.data = rdata;
     692:	c6 e9       	ldi	r28, 0x96	; 150
     694:	d3 e0       	ldi	r29, 0x03	; 3
     696:	a9 81       	ldd	r26, Y+1	; 0x01
     698:	ba 81       	ldd	r27, Y+2	; 0x02
     69a:	fd 01       	movw	r30, r26
     69c:	91 93       	st	Z+, r25
	}

	SPI_0_desc.data++;
     69e:	fa 83       	std	Y+2, r31	; 0x02
     6a0:	e9 83       	std	Y+1, r30	; 0x01

	if (SPI_0_desc.type != SPI_READ)
     6a2:	81 30       	cpi	r24, 0x01	; 1
     6a4:	19 f0       	breq	.+6      	; 0x6ac <__vector_24+0x4e>
		wdata = *SPI_0_desc.data;
     6a6:	11 96       	adiw	r26, 0x01	; 1
     6a8:	9c 91       	ld	r25, X
     6aa:	01 c0       	rjmp	.+2      	; 0x6ae <__vector_24+0x50>
	/* SPI_0_desc.data points to array element
	   to write the received data to. The data to be transmitted
	   is in the next array element.
	*/
	uint8_t rdata = SPDR;
	uint8_t wdata = 0;
     6ac:	90 e0       	ldi	r25, 0x00	; 0
	SPI_0_desc.data++;

	if (SPI_0_desc.type != SPI_READ)
		wdata = *SPI_0_desc.data;

	SPI_0_desc.size--;
     6ae:	e6 e9       	ldi	r30, 0x96	; 150
     6b0:	f3 e0       	ldi	r31, 0x03	; 3
     6b2:	83 81       	ldd	r24, Z+3	; 0x03
     6b4:	81 50       	subi	r24, 0x01	; 1
     6b6:	83 83       	std	Z+3, r24	; 0x03
	// if more bytes to be transferred
	if (SPI_0_desc.size != 0) {
     6b8:	88 23       	and	r24, r24
     6ba:	11 f0       	breq	.+4      	; 0x6c0 <__vector_24+0x62>
		// more data to send, send a byte
		SPDR = wdata;
     6bc:	9e bd       	out	0x2e, r25	; 46
     6be:	14 c0       	rjmp	.+40     	; 0x6e8 <__vector_24+0x8a>
	}

	// if last byte has been transferred, update status
	// and optionally call callback
	else {
		SPI_0_desc.status = SPI_DONE;
     6c0:	e6 e9       	ldi	r30, 0x96	; 150
     6c2:	f3 e0       	ldi	r31, 0x03	; 3
     6c4:	83 e0       	ldi	r24, 0x03	; 3
     6c6:	80 83       	st	Z, r24
		if (SPI_0_desc.cb != NULL) {
     6c8:	05 80       	ldd	r0, Z+5	; 0x05
     6ca:	f6 81       	ldd	r31, Z+6	; 0x06
     6cc:	e0 2d       	mov	r30, r0
     6ce:	30 97       	sbiw	r30, 0x00	; 0
     6d0:	59 f0       	breq	.+22     	; 0x6e8 <__vector_24+0x8a>
			SPI_0_desc.cb();
     6d2:	19 95       	eicall
		}
	}
}
     6d4:	09 c0       	rjmp	.+18     	; 0x6e8 <__vector_24+0x8a>
	uint8_t wdata = 0;
	if (SPI_0_desc.type != SPI_WRITE) {
		*SPI_0_desc.data = rdata;
	}

	SPI_0_desc.data++;
     6d6:	e6 e9       	ldi	r30, 0x96	; 150
     6d8:	f3 e0       	ldi	r31, 0x03	; 3
     6da:	a1 81       	ldd	r26, Z+1	; 0x01
     6dc:	b2 81       	ldd	r27, Z+2	; 0x02
     6de:	cd 01       	movw	r24, r26
     6e0:	01 96       	adiw	r24, 0x01	; 1
     6e2:	92 83       	std	Z+2, r25	; 0x02
     6e4:	81 83       	std	Z+1, r24	; 0x01
     6e6:	df cf       	rjmp	.-66     	; 0x6a6 <__vector_24+0x48>
		SPI_0_desc.status = SPI_DONE;
		if (SPI_0_desc.cb != NULL) {
			SPI_0_desc.cb();
		}
	}
}
     6e8:	ff 91       	pop	r31
     6ea:	ef 91       	pop	r30
     6ec:	df 91       	pop	r29
     6ee:	cf 91       	pop	r28
     6f0:	bf 91       	pop	r27
     6f2:	af 91       	pop	r26
     6f4:	9f 91       	pop	r25
     6f6:	8f 91       	pop	r24
     6f8:	7f 91       	pop	r23
     6fa:	6f 91       	pop	r22
     6fc:	5f 91       	pop	r21
     6fe:	4f 91       	pop	r20
     700:	3f 91       	pop	r19
     702:	2f 91       	pop	r18
     704:	0f 90       	pop	r0
     706:	0b be       	out	0x3b, r0	; 59
     708:	0f 90       	pop	r0
     70a:	0f be       	out	0x3f, r0	; 63
     70c:	0f 90       	pop	r0
     70e:	1f 90       	pop	r1
     710:	18 95       	reti

00000712 <TIMER_0_init>:
 */
int8_t TIMER_0_init()
{

	/* Enable TC4 */
	PRR1 &= ~(1 << PRTIM4);
     712:	e5 e6       	ldi	r30, 0x65	; 101
     714:	f0 e0       	ldi	r31, 0x00	; 0
     716:	80 81       	ld	r24, Z
     718:	8f 7e       	andi	r24, 0xEF	; 239
     71a:	80 83       	st	Z, r24

	// TCCR4A = (0 << COM4A1) | (0 << COM4A0) /* Normal port operation, OCA disconnected */
	//		 | (0 << COM4B1) | (0 << COM4B0) /* Normal port operation, OCB disconnected */
	//		 | (0 << WGM41) | (0 << WGM40); /* TC16 Mode 0 Normal */

	TCCR4B = (0 << WGM43) | (0 << WGM42)                /* TC16 Mode 0 Normal */
     71c:	81 e0       	ldi	r24, 0x01	; 1
     71e:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>

	// OCR4A = 0; /* Output compare A: 0 */

	// OCR4B = 0; /* Output compare B: 0 */

	TIMSK4 = 0 << OCIE4B   /* Output Compare B Match Interrupt Enable: disabled */
     722:	82 e0       	ldi	r24, 0x02	; 2
     724:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <__TEXT_REGION_LENGTH__+0x700072>
	         | 1 << OCIE4A /* Output Compare A Match Interrupt Enable: enabled */
	         | 0 << ICIE4  /* Input Capture Interrupt Enable: disabled */
	         | 0 << TOIE4; /* Overflow Interrupt Enable: disabled */

	return 0;
}
     728:	80 e0       	ldi	r24, 0x00	; 0
     72a:	08 95       	ret

0000072c <TIMER_1_init>:
 */
int8_t TIMER_1_init()
{

	/* Enable TC5 */
	PRR1 &= ~(1 << PRTIM5);
     72c:	e5 e6       	ldi	r30, 0x65	; 101
     72e:	f0 e0       	ldi	r31, 0x00	; 0
     730:	80 81       	ld	r24, Z
     732:	8f 7d       	andi	r24, 0xDF	; 223
     734:	80 83       	st	Z, r24

	// TCCR5A = (0 << COM5A1) | (0 << COM5A0) /* Normal port operation, OCA disconnected */
	//		 | (0 << COM5B1) | (0 << COM5B0) /* Normal port operation, OCB disconnected */
	//		 | (0 << WGM51) | (0 << WGM50); /* TC16 Mode 0 Normal */

	TCCR5B = (0 << WGM53) | (0 << WGM52)                /* TC16 Mode 0 Normal */
     736:	81 e0       	ldi	r24, 0x01	; 1
     738:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <__TEXT_REGION_LENGTH__+0x700121>
	         | 0 << ICES5                               /* Input Capture Edge Select: disabled */
	         | (0 << CS52) | (0 << CS51) | (1 << CS50); /* No prescaling */

	// ICR5 = 0; /* Input capture value, used as top counter value in some modes: 0 */

	OCR5A = 16000; /* Output compare A: 16000 */
     73c:	80 e8       	ldi	r24, 0x80	; 128
     73e:	9e e3       	ldi	r25, 0x3E	; 62
     740:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     744:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>

	// OCR5B = 0; /* Output compare B: 0 */

	TIMSK5 = 0 << OCIE5B   /* Output Compare B Match Interrupt Enable: disabled */
     748:	82 e0       	ldi	r24, 0x02	; 2
     74a:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x700073>
	         | 1 << OCIE5A /* Output Compare A Match Interrupt Enable: enabled */
	         | 0 << ICIE5  /* Input Capture Interrupt Enable: disabled */
	         | 0 << TOIE5; /* Overflow Interrupt Enable: disabled */

	return 0;
}
     74e:	80 e0       	ldi	r24, 0x00	; 0
     750:	08 95       	ret

00000752 <__vector_25>:
}

bool USART_3_is_tx_busy()
{
	return (!(UCSR3A & (1 << TXC3)));
}
     752:	1f 92       	push	r1
     754:	0f 92       	push	r0
     756:	0f b6       	in	r0, 0x3f	; 63
     758:	0f 92       	push	r0
     75a:	11 24       	eor	r1, r1
     75c:	0b b6       	in	r0, 0x3b	; 59
     75e:	0f 92       	push	r0
     760:	8f 93       	push	r24
     762:	9f 93       	push	r25
     764:	ef 93       	push	r30
     766:	ff 93       	push	r31
     768:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     76c:	e0 91 34 04 	lds	r30, 0x0434	; 0x800434 <USART_0_rx_head>
     770:	ef 5f       	subi	r30, 0xFF	; 255
     772:	e0 93 34 04 	sts	0x0434, r30	; 0x800434 <USART_0_rx_head>
     776:	90 91 33 04 	lds	r25, 0x0433	; 0x800433 <USART_0_rx_tail>
     77a:	f0 e0       	ldi	r31, 0x00	; 0
     77c:	eb 5c       	subi	r30, 0xCB	; 203
     77e:	fb 4f       	sbci	r31, 0xFB	; 251
     780:	80 83       	st	Z, r24
     782:	80 91 32 04 	lds	r24, 0x0432	; 0x800432 <USART_0_rx_elements>
     786:	8f 5f       	subi	r24, 0xFF	; 255
     788:	80 93 32 04 	sts	0x0432, r24	; 0x800432 <USART_0_rx_elements>
     78c:	ff 91       	pop	r31
     78e:	ef 91       	pop	r30
     790:	9f 91       	pop	r25
     792:	8f 91       	pop	r24
     794:	0f 90       	pop	r0
     796:	0b be       	out	0x3b, r0	; 59
     798:	0f 90       	pop	r0
     79a:	0f be       	out	0x3f, r0	; 63
     79c:	0f 90       	pop	r0
     79e:	1f 90       	pop	r1
     7a0:	18 95       	reti

000007a2 <__vector_26>:
     7a2:	1f 92       	push	r1
     7a4:	0f 92       	push	r0
     7a6:	0f b6       	in	r0, 0x3f	; 63
     7a8:	0f 92       	push	r0
     7aa:	11 24       	eor	r1, r1
     7ac:	0b b6       	in	r0, 0x3b	; 59
     7ae:	0f 92       	push	r0
     7b0:	8f 93       	push	r24
     7b2:	ef 93       	push	r30
     7b4:	ff 93       	push	r31
     7b6:	80 91 1f 04 	lds	r24, 0x041F	; 0x80041f <USART_0_tx_elements>
     7ba:	88 23       	and	r24, r24
     7bc:	89 f0       	breq	.+34     	; 0x7e0 <__vector_26+0x3e>
     7be:	e0 91 20 04 	lds	r30, 0x0420	; 0x800420 <USART_0_tx_tail>
     7c2:	ef 5f       	subi	r30, 0xFF	; 255
     7c4:	ef 70       	andi	r30, 0x0F	; 15
     7c6:	e0 93 20 04 	sts	0x0420, r30	; 0x800420 <USART_0_tx_tail>
     7ca:	f0 e0       	ldi	r31, 0x00	; 0
     7cc:	ee 5d       	subi	r30, 0xDE	; 222
     7ce:	fb 4f       	sbci	r31, 0xFB	; 251
     7d0:	80 81       	ld	r24, Z
     7d2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     7d6:	80 91 1f 04 	lds	r24, 0x041F	; 0x80041f <USART_0_tx_elements>
     7da:	81 50       	subi	r24, 0x01	; 1
     7dc:	80 93 1f 04 	sts	0x041F, r24	; 0x80041f <USART_0_tx_elements>
     7e0:	80 91 1f 04 	lds	r24, 0x041F	; 0x80041f <USART_0_tx_elements>
     7e4:	81 11       	cpse	r24, r1
     7e6:	05 c0       	rjmp	.+10     	; 0x7f2 <__vector_26+0x50>
     7e8:	e1 ec       	ldi	r30, 0xC1	; 193
     7ea:	f0 e0       	ldi	r31, 0x00	; 0
     7ec:	80 81       	ld	r24, Z
     7ee:	8f 7d       	andi	r24, 0xDF	; 223
     7f0:	80 83       	st	Z, r24
     7f2:	ff 91       	pop	r31
     7f4:	ef 91       	pop	r30
     7f6:	8f 91       	pop	r24
     7f8:	0f 90       	pop	r0
     7fa:	0b be       	out	0x3b, r0	; 59
     7fc:	0f 90       	pop	r0
     7fe:	0f be       	out	0x3f, r0	; 63
     800:	0f 90       	pop	r0
     802:	1f 90       	pop	r1
     804:	18 95       	reti

00000806 <USART_0_init>:
     806:	e4 e6       	ldi	r30, 0x64	; 100
     808:	f0 e0       	ldi	r31, 0x00	; 0
     80a:	80 81       	ld	r24, Z
     80c:	8d 7f       	andi	r24, 0xFD	; 253
     80e:	80 83       	st	Z, r24
     810:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     814:	87 e6       	ldi	r24, 0x67	; 103
     816:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     81a:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
     81e:	88 e9       	ldi	r24, 0x98	; 152
     820:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
     824:	10 92 33 04 	sts	0x0433, r1	; 0x800433 <USART_0_rx_tail>
     828:	10 92 34 04 	sts	0x0434, r1	; 0x800434 <USART_0_rx_head>
     82c:	10 92 32 04 	sts	0x0432, r1	; 0x800432 <USART_0_rx_elements>
     830:	10 92 20 04 	sts	0x0420, r1	; 0x800420 <USART_0_tx_tail>
     834:	10 92 21 04 	sts	0x0421, r1	; 0x800421 <USART_0_tx_head>
     838:	10 92 1f 04 	sts	0x041F, r1	; 0x80041f <USART_0_tx_elements>
     83c:	80 e0       	ldi	r24, 0x00	; 0
     83e:	08 95       	ret

00000840 <__vector_36>:
     840:	1f 92       	push	r1
     842:	0f 92       	push	r0
     844:	0f b6       	in	r0, 0x3f	; 63
     846:	0f 92       	push	r0
     848:	11 24       	eor	r1, r1
     84a:	0b b6       	in	r0, 0x3b	; 59
     84c:	0f 92       	push	r0
     84e:	8f 93       	push	r24
     850:	9f 93       	push	r25
     852:	ef 93       	push	r30
     854:	ff 93       	push	r31
     856:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
     85a:	e0 91 0e 04 	lds	r30, 0x040E	; 0x80040e <USART_1_rx_head>
     85e:	ef 5f       	subi	r30, 0xFF	; 255
     860:	ef 70       	andi	r30, 0x0F	; 15
     862:	e0 93 0e 04 	sts	0x040E, r30	; 0x80040e <USART_1_rx_head>
     866:	90 91 0d 04 	lds	r25, 0x040D	; 0x80040d <USART_1_rx_tail>
     86a:	f0 e0       	ldi	r31, 0x00	; 0
     86c:	e1 5f       	subi	r30, 0xF1	; 241
     86e:	fb 4f       	sbci	r31, 0xFB	; 251
     870:	80 83       	st	Z, r24
     872:	80 91 0c 04 	lds	r24, 0x040C	; 0x80040c <USART_1_rx_elements>
     876:	8f 5f       	subi	r24, 0xFF	; 255
     878:	80 93 0c 04 	sts	0x040C, r24	; 0x80040c <USART_1_rx_elements>
     87c:	ff 91       	pop	r31
     87e:	ef 91       	pop	r30
     880:	9f 91       	pop	r25
     882:	8f 91       	pop	r24
     884:	0f 90       	pop	r0
     886:	0b be       	out	0x3b, r0	; 59
     888:	0f 90       	pop	r0
     88a:	0f be       	out	0x3f, r0	; 63
     88c:	0f 90       	pop	r0
     88e:	1f 90       	pop	r1
     890:	18 95       	reti

00000892 <__vector_37>:
     892:	1f 92       	push	r1
     894:	0f 92       	push	r0
     896:	0f b6       	in	r0, 0x3f	; 63
     898:	0f 92       	push	r0
     89a:	11 24       	eor	r1, r1
     89c:	0b b6       	in	r0, 0x3b	; 59
     89e:	0f 92       	push	r0
     8a0:	8f 93       	push	r24
     8a2:	ef 93       	push	r30
     8a4:	ff 93       	push	r31
     8a6:	80 91 f9 03 	lds	r24, 0x03F9	; 0x8003f9 <USART_1_tx_elements>
     8aa:	88 23       	and	r24, r24
     8ac:	89 f0       	breq	.+34     	; 0x8d0 <__vector_37+0x3e>
     8ae:	e0 91 fa 03 	lds	r30, 0x03FA	; 0x8003fa <USART_1_tx_tail>
     8b2:	ef 5f       	subi	r30, 0xFF	; 255
     8b4:	ef 70       	andi	r30, 0x0F	; 15
     8b6:	e0 93 fa 03 	sts	0x03FA, r30	; 0x8003fa <USART_1_tx_tail>
     8ba:	f0 e0       	ldi	r31, 0x00	; 0
     8bc:	e4 50       	subi	r30, 0x04	; 4
     8be:	fc 4f       	sbci	r31, 0xFC	; 252
     8c0:	80 81       	ld	r24, Z
     8c2:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
     8c6:	80 91 f9 03 	lds	r24, 0x03F9	; 0x8003f9 <USART_1_tx_elements>
     8ca:	81 50       	subi	r24, 0x01	; 1
     8cc:	80 93 f9 03 	sts	0x03F9, r24	; 0x8003f9 <USART_1_tx_elements>
     8d0:	80 91 f9 03 	lds	r24, 0x03F9	; 0x8003f9 <USART_1_tx_elements>
     8d4:	81 11       	cpse	r24, r1
     8d6:	05 c0       	rjmp	.+10     	; 0x8e2 <__vector_37+0x50>
     8d8:	e9 ec       	ldi	r30, 0xC9	; 201
     8da:	f0 e0       	ldi	r31, 0x00	; 0
     8dc:	80 81       	ld	r24, Z
     8de:	8f 7d       	andi	r24, 0xDF	; 223
     8e0:	80 83       	st	Z, r24
     8e2:	ff 91       	pop	r31
     8e4:	ef 91       	pop	r30
     8e6:	8f 91       	pop	r24
     8e8:	0f 90       	pop	r0
     8ea:	0b be       	out	0x3b, r0	; 59
     8ec:	0f 90       	pop	r0
     8ee:	0f be       	out	0x3f, r0	; 63
     8f0:	0f 90       	pop	r0
     8f2:	1f 90       	pop	r1
     8f4:	18 95       	reti

000008f6 <USART_1_is_rx_ready>:
     8f6:	90 91 0c 04 	lds	r25, 0x040C	; 0x80040c <USART_1_rx_elements>
     8fa:	81 e0       	ldi	r24, 0x01	; 1
     8fc:	91 11       	cpse	r25, r1
     8fe:	01 c0       	rjmp	.+2      	; 0x902 <USART_1_is_rx_ready+0xc>
     900:	80 e0       	ldi	r24, 0x00	; 0
     902:	08 95       	ret

00000904 <USART_1_read>:
     904:	80 91 0c 04 	lds	r24, 0x040C	; 0x80040c <USART_1_rx_elements>
     908:	88 23       	and	r24, r24
     90a:	e1 f3       	breq	.-8      	; 0x904 <USART_1_read>
     90c:	e0 91 0d 04 	lds	r30, 0x040D	; 0x80040d <USART_1_rx_tail>
     910:	ef 5f       	subi	r30, 0xFF	; 255
     912:	ef 70       	andi	r30, 0x0F	; 15
     914:	e0 93 0d 04 	sts	0x040D, r30	; 0x80040d <USART_1_rx_tail>
     918:	0f b6       	in	r0, 0x3f	; 63
     91a:	f8 94       	cli
     91c:	0f 92       	push	r0
     91e:	80 91 0c 04 	lds	r24, 0x040C	; 0x80040c <USART_1_rx_elements>
     922:	81 50       	subi	r24, 0x01	; 1
     924:	80 93 0c 04 	sts	0x040C, r24	; 0x80040c <USART_1_rx_elements>
     928:	0f 90       	pop	r0
     92a:	0f be       	out	0x3f, r0	; 63
     92c:	f0 e0       	ldi	r31, 0x00	; 0
     92e:	e1 5f       	subi	r30, 0xF1	; 241
     930:	fb 4f       	sbci	r31, 0xFB	; 251
     932:	80 81       	ld	r24, Z
     934:	08 95       	ret

00000936 <USART_1_write>:
     936:	20 91 fb 03 	lds	r18, 0x03FB	; 0x8003fb <USART_1_tx_head>
     93a:	2f 5f       	subi	r18, 0xFF	; 255
     93c:	2f 70       	andi	r18, 0x0F	; 15
     93e:	90 91 f9 03 	lds	r25, 0x03F9	; 0x8003f9 <USART_1_tx_elements>
     942:	90 31       	cpi	r25, 0x10	; 16
     944:	e1 f3       	breq	.-8      	; 0x93e <USART_1_write+0x8>
     946:	e2 2f       	mov	r30, r18
     948:	f0 e0       	ldi	r31, 0x00	; 0
     94a:	e4 50       	subi	r30, 0x04	; 4
     94c:	fc 4f       	sbci	r31, 0xFC	; 252
     94e:	80 83       	st	Z, r24
     950:	20 93 fb 03 	sts	0x03FB, r18	; 0x8003fb <USART_1_tx_head>
     954:	0f b6       	in	r0, 0x3f	; 63
     956:	f8 94       	cli
     958:	0f 92       	push	r0
     95a:	80 91 f9 03 	lds	r24, 0x03F9	; 0x8003f9 <USART_1_tx_elements>
     95e:	8f 5f       	subi	r24, 0xFF	; 255
     960:	80 93 f9 03 	sts	0x03F9, r24	; 0x8003f9 <USART_1_tx_elements>
     964:	0f 90       	pop	r0
     966:	0f be       	out	0x3f, r0	; 63
     968:	e9 ec       	ldi	r30, 0xC9	; 201
     96a:	f0 e0       	ldi	r31, 0x00	; 0
     96c:	80 81       	ld	r24, Z
     96e:	80 62       	ori	r24, 0x20	; 32
     970:	80 83       	st	Z, r24
     972:	08 95       	ret

00000974 <USART_1_init>:
     974:	e5 e6       	ldi	r30, 0x65	; 101
     976:	f0 e0       	ldi	r31, 0x00	; 0
     978:	80 81       	ld	r24, Z
     97a:	8e 7f       	andi	r24, 0xFE	; 254
     97c:	80 83       	st	Z, r24
     97e:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
     982:	87 e6       	ldi	r24, 0x67	; 103
     984:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
     988:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7000c8>
     98c:	88 e9       	ldi	r24, 0x98	; 152
     98e:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7000c9>
     992:	10 92 0d 04 	sts	0x040D, r1	; 0x80040d <USART_1_rx_tail>
     996:	10 92 0e 04 	sts	0x040E, r1	; 0x80040e <USART_1_rx_head>
     99a:	10 92 0c 04 	sts	0x040C, r1	; 0x80040c <USART_1_rx_elements>
     99e:	10 92 fa 03 	sts	0x03FA, r1	; 0x8003fa <USART_1_tx_tail>
     9a2:	10 92 fb 03 	sts	0x03FB, r1	; 0x8003fb <USART_1_tx_head>
     9a6:	10 92 f9 03 	sts	0x03F9, r1	; 0x8003f9 <USART_1_tx_elements>
     9aa:	80 e0       	ldi	r24, 0x00	; 0
     9ac:	08 95       	ret

000009ae <__vector_51>:
     9ae:	1f 92       	push	r1
     9b0:	0f 92       	push	r0
     9b2:	0f b6       	in	r0, 0x3f	; 63
     9b4:	0f 92       	push	r0
     9b6:	11 24       	eor	r1, r1
     9b8:	0b b6       	in	r0, 0x3b	; 59
     9ba:	0f 92       	push	r0
     9bc:	8f 93       	push	r24
     9be:	9f 93       	push	r25
     9c0:	ef 93       	push	r30
     9c2:	ff 93       	push	r31
     9c4:	80 91 d6 00 	lds	r24, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
     9c8:	e0 91 d8 03 	lds	r30, 0x03D8	; 0x8003d8 <USART_2_rx_head>
     9cc:	ef 5f       	subi	r30, 0xFF	; 255
     9ce:	ef 71       	andi	r30, 0x1F	; 31
     9d0:	e0 93 d8 03 	sts	0x03D8, r30	; 0x8003d8 <USART_2_rx_head>
     9d4:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <USART_2_rx_tail>
     9d8:	f0 e0       	ldi	r31, 0x00	; 0
     9da:	e7 52       	subi	r30, 0x27	; 39
     9dc:	fc 4f       	sbci	r31, 0xFC	; 252
     9de:	80 83       	st	Z, r24
     9e0:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <USART_2_rx_elements>
     9e4:	8f 5f       	subi	r24, 0xFF	; 255
     9e6:	80 93 d6 03 	sts	0x03D6, r24	; 0x8003d6 <USART_2_rx_elements>
     9ea:	ff 91       	pop	r31
     9ec:	ef 91       	pop	r30
     9ee:	9f 91       	pop	r25
     9f0:	8f 91       	pop	r24
     9f2:	0f 90       	pop	r0
     9f4:	0b be       	out	0x3b, r0	; 59
     9f6:	0f 90       	pop	r0
     9f8:	0f be       	out	0x3f, r0	; 63
     9fa:	0f 90       	pop	r0
     9fc:	1f 90       	pop	r1
     9fe:	18 95       	reti

00000a00 <__vector_52>:
     a00:	1f 92       	push	r1
     a02:	0f 92       	push	r0
     a04:	0f b6       	in	r0, 0x3f	; 63
     a06:	0f 92       	push	r0
     a08:	11 24       	eor	r1, r1
     a0a:	0b b6       	in	r0, 0x3b	; 59
     a0c:	0f 92       	push	r0
     a0e:	8f 93       	push	r24
     a10:	ef 93       	push	r30
     a12:	ff 93       	push	r31
     a14:	80 91 c3 03 	lds	r24, 0x03C3	; 0x8003c3 <USART_2_tx_elements>
     a18:	88 23       	and	r24, r24
     a1a:	89 f0       	breq	.+34     	; 0xa3e <__vector_52+0x3e>
     a1c:	e0 91 c4 03 	lds	r30, 0x03C4	; 0x8003c4 <USART_2_tx_tail>
     a20:	ef 5f       	subi	r30, 0xFF	; 255
     a22:	ef 70       	andi	r30, 0x0F	; 15
     a24:	e0 93 c4 03 	sts	0x03C4, r30	; 0x8003c4 <USART_2_tx_tail>
     a28:	f0 e0       	ldi	r31, 0x00	; 0
     a2a:	ea 53       	subi	r30, 0x3A	; 58
     a2c:	fc 4f       	sbci	r31, 0xFC	; 252
     a2e:	80 81       	ld	r24, Z
     a30:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
     a34:	80 91 c3 03 	lds	r24, 0x03C3	; 0x8003c3 <USART_2_tx_elements>
     a38:	81 50       	subi	r24, 0x01	; 1
     a3a:	80 93 c3 03 	sts	0x03C3, r24	; 0x8003c3 <USART_2_tx_elements>
     a3e:	80 91 c3 03 	lds	r24, 0x03C3	; 0x8003c3 <USART_2_tx_elements>
     a42:	81 11       	cpse	r24, r1
     a44:	05 c0       	rjmp	.+10     	; 0xa50 <__vector_52+0x50>
     a46:	e1 ed       	ldi	r30, 0xD1	; 209
     a48:	f0 e0       	ldi	r31, 0x00	; 0
     a4a:	80 81       	ld	r24, Z
     a4c:	8f 7d       	andi	r24, 0xDF	; 223
     a4e:	80 83       	st	Z, r24
     a50:	ff 91       	pop	r31
     a52:	ef 91       	pop	r30
     a54:	8f 91       	pop	r24
     a56:	0f 90       	pop	r0
     a58:	0b be       	out	0x3b, r0	; 59
     a5a:	0f 90       	pop	r0
     a5c:	0f be       	out	0x3f, r0	; 63
     a5e:	0f 90       	pop	r0
     a60:	1f 90       	pop	r1
     a62:	18 95       	reti

00000a64 <USART_2_init>:
     a64:	e5 e6       	ldi	r30, 0x65	; 101
     a66:	f0 e0       	ldi	r31, 0x00	; 0
     a68:	80 81       	ld	r24, Z
     a6a:	8d 7f       	andi	r24, 0xFD	; 253
     a6c:	80 83       	st	Z, r24
     a6e:	10 92 d5 00 	sts	0x00D5, r1	; 0x8000d5 <__TEXT_REGION_LENGTH__+0x7000d5>
     a72:	87 e6       	ldi	r24, 0x67	; 103
     a74:	80 93 d4 00 	sts	0x00D4, r24	; 0x8000d4 <__TEXT_REGION_LENGTH__+0x7000d4>
     a78:	10 92 d0 00 	sts	0x00D0, r1	; 0x8000d0 <__TEXT_REGION_LENGTH__+0x7000d0>
     a7c:	88 e9       	ldi	r24, 0x98	; 152
     a7e:	80 93 d1 00 	sts	0x00D1, r24	; 0x8000d1 <__TEXT_REGION_LENGTH__+0x7000d1>
     a82:	10 92 d7 03 	sts	0x03D7, r1	; 0x8003d7 <USART_2_rx_tail>
     a86:	10 92 d8 03 	sts	0x03D8, r1	; 0x8003d8 <USART_2_rx_head>
     a8a:	10 92 d6 03 	sts	0x03D6, r1	; 0x8003d6 <USART_2_rx_elements>
     a8e:	10 92 c4 03 	sts	0x03C4, r1	; 0x8003c4 <USART_2_tx_tail>
     a92:	10 92 c5 03 	sts	0x03C5, r1	; 0x8003c5 <USART_2_tx_head>
     a96:	10 92 c3 03 	sts	0x03C3, r1	; 0x8003c3 <USART_2_tx_elements>
     a9a:	80 e0       	ldi	r24, 0x00	; 0
     a9c:	08 95       	ret

00000a9e <__vector_54>:
     a9e:	1f 92       	push	r1
     aa0:	0f 92       	push	r0
     aa2:	0f b6       	in	r0, 0x3f	; 63
     aa4:	0f 92       	push	r0
     aa6:	11 24       	eor	r1, r1
     aa8:	0b b6       	in	r0, 0x3b	; 59
     aaa:	0f 92       	push	r0
     aac:	8f 93       	push	r24
     aae:	9f 93       	push	r25
     ab0:	ef 93       	push	r30
     ab2:	ff 93       	push	r31
     ab4:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
     ab8:	e0 91 b2 03 	lds	r30, 0x03B2	; 0x8003b2 <USART_3_rx_head>
     abc:	ef 5f       	subi	r30, 0xFF	; 255
     abe:	ef 70       	andi	r30, 0x0F	; 15
     ac0:	e0 93 b2 03 	sts	0x03B2, r30	; 0x8003b2 <USART_3_rx_head>
     ac4:	90 91 b1 03 	lds	r25, 0x03B1	; 0x8003b1 <USART_3_rx_tail>
     ac8:	f0 e0       	ldi	r31, 0x00	; 0
     aca:	ed 54       	subi	r30, 0x4D	; 77
     acc:	fc 4f       	sbci	r31, 0xFC	; 252
     ace:	80 83       	st	Z, r24
     ad0:	80 91 b0 03 	lds	r24, 0x03B0	; 0x8003b0 <USART_3_rx_elements>
     ad4:	8f 5f       	subi	r24, 0xFF	; 255
     ad6:	80 93 b0 03 	sts	0x03B0, r24	; 0x8003b0 <USART_3_rx_elements>
     ada:	ff 91       	pop	r31
     adc:	ef 91       	pop	r30
     ade:	9f 91       	pop	r25
     ae0:	8f 91       	pop	r24
     ae2:	0f 90       	pop	r0
     ae4:	0b be       	out	0x3b, r0	; 59
     ae6:	0f 90       	pop	r0
     ae8:	0f be       	out	0x3f, r0	; 63
     aea:	0f 90       	pop	r0
     aec:	1f 90       	pop	r1
     aee:	18 95       	reti

00000af0 <__vector_55>:
     af0:	1f 92       	push	r1
     af2:	0f 92       	push	r0
     af4:	0f b6       	in	r0, 0x3f	; 63
     af6:	0f 92       	push	r0
     af8:	11 24       	eor	r1, r1
     afa:	0b b6       	in	r0, 0x3b	; 59
     afc:	0f 92       	push	r0
     afe:	8f 93       	push	r24
     b00:	ef 93       	push	r30
     b02:	ff 93       	push	r31
     b04:	80 91 9d 03 	lds	r24, 0x039D	; 0x80039d <USART_3_tx_elements>
     b08:	88 23       	and	r24, r24
     b0a:	89 f0       	breq	.+34     	; 0xb2e <__vector_55+0x3e>
     b0c:	e0 91 9e 03 	lds	r30, 0x039E	; 0x80039e <USART_3_tx_tail>
     b10:	ef 5f       	subi	r30, 0xFF	; 255
     b12:	ef 70       	andi	r30, 0x0F	; 15
     b14:	e0 93 9e 03 	sts	0x039E, r30	; 0x80039e <USART_3_tx_tail>
     b18:	f0 e0       	ldi	r31, 0x00	; 0
     b1a:	e0 56       	subi	r30, 0x60	; 96
     b1c:	fc 4f       	sbci	r31, 0xFC	; 252
     b1e:	80 81       	ld	r24, Z
     b20:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
     b24:	80 91 9d 03 	lds	r24, 0x039D	; 0x80039d <USART_3_tx_elements>
     b28:	81 50       	subi	r24, 0x01	; 1
     b2a:	80 93 9d 03 	sts	0x039D, r24	; 0x80039d <USART_3_tx_elements>
     b2e:	80 91 9d 03 	lds	r24, 0x039D	; 0x80039d <USART_3_tx_elements>
     b32:	81 11       	cpse	r24, r1
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__vector_55+0x50>
     b36:	e1 e3       	ldi	r30, 0x31	; 49
     b38:	f1 e0       	ldi	r31, 0x01	; 1
     b3a:	80 81       	ld	r24, Z
     b3c:	8f 7d       	andi	r24, 0xDF	; 223
     b3e:	80 83       	st	Z, r24
     b40:	ff 91       	pop	r31
     b42:	ef 91       	pop	r30
     b44:	8f 91       	pop	r24
     b46:	0f 90       	pop	r0
     b48:	0b be       	out	0x3b, r0	; 59
     b4a:	0f 90       	pop	r0
     b4c:	0f be       	out	0x3f, r0	; 63
     b4e:	0f 90       	pop	r0
     b50:	1f 90       	pop	r1
     b52:	18 95       	reti

00000b54 <USART_3_is_rx_ready>:
     b54:	90 91 b0 03 	lds	r25, 0x03B0	; 0x8003b0 <USART_3_rx_elements>
     b58:	81 e0       	ldi	r24, 0x01	; 1
     b5a:	91 11       	cpse	r25, r1
     b5c:	01 c0       	rjmp	.+2      	; 0xb60 <USART_3_is_rx_ready+0xc>
     b5e:	80 e0       	ldi	r24, 0x00	; 0
     b60:	08 95       	ret

00000b62 <USART_3_read>:
uint8_t USART_3_read(void)
{
	uint8_t tmptail;

	/* Wait for incoming data */
	while (USART_3_rx_elements == 0)
     b62:	80 91 b0 03 	lds	r24, 0x03B0	; 0x8003b0 <USART_3_rx_elements>
     b66:	88 23       	and	r24, r24
     b68:	e1 f3       	breq	.-8      	; 0xb62 <USART_3_read>
		;
	/* Calculate buffer index */
	tmptail = (USART_3_rx_tail + 1) & USART_3_RX_BUFFER_MASK;
     b6a:	e0 91 b1 03 	lds	r30, 0x03B1	; 0x8003b1 <USART_3_rx_tail>
     b6e:	ef 5f       	subi	r30, 0xFF	; 255
     b70:	ef 70       	andi	r30, 0x0F	; 15
	/* Store new index */
	USART_3_rx_tail = tmptail;
     b72:	e0 93 b1 03 	sts	0x03B1, r30	; 0x8003b1 <USART_3_rx_tail>
	ENTER_CRITICAL(R);
     b76:	0f b6       	in	r0, 0x3f	; 63
     b78:	f8 94       	cli
     b7a:	0f 92       	push	r0
	USART_3_rx_elements--;
     b7c:	80 91 b0 03 	lds	r24, 0x03B0	; 0x8003b0 <USART_3_rx_elements>
     b80:	81 50       	subi	r24, 0x01	; 1
     b82:	80 93 b0 03 	sts	0x03B0, r24	; 0x8003b0 <USART_3_rx_elements>
	EXIT_CRITICAL(R);
     b86:	0f 90       	pop	r0
     b88:	0f be       	out	0x3f, r0	; 63

	/* Return data */
	return USART_3_rxbuf[tmptail];
     b8a:	f0 e0       	ldi	r31, 0x00	; 0
     b8c:	ed 54       	subi	r30, 0x4D	; 77
     b8e:	fc 4f       	sbci	r31, 0xFC	; 252
}
     b90:	80 81       	ld	r24, Z
     b92:	08 95       	ret

00000b94 <USART_3_write>:
void USART_3_write(const uint8_t data)
{
	uint8_t tmphead;

	/* Calculate buffer index */
	tmphead = (USART_3_tx_head + 1) & USART_3_TX_BUFFER_MASK;
     b94:	20 91 9f 03 	lds	r18, 0x039F	; 0x80039f <USART_3_tx_head>
     b98:	2f 5f       	subi	r18, 0xFF	; 255
     b9a:	2f 70       	andi	r18, 0x0F	; 15
	/* Wait for free space in buffer */
	while (USART_3_tx_elements == USART_3_TX_BUFFER_SIZE)
     b9c:	90 91 9d 03 	lds	r25, 0x039D	; 0x80039d <USART_3_tx_elements>
     ba0:	90 31       	cpi	r25, 0x10	; 16
     ba2:	e1 f3       	breq	.-8      	; 0xb9c <USART_3_write+0x8>
		;
	/* Store data in buffer */
	USART_3_txbuf[tmphead] = data;
     ba4:	e2 2f       	mov	r30, r18
     ba6:	f0 e0       	ldi	r31, 0x00	; 0
     ba8:	e0 56       	subi	r30, 0x60	; 96
     baa:	fc 4f       	sbci	r31, 0xFC	; 252
     bac:	80 83       	st	Z, r24
	/* Store new index */
	USART_3_tx_head = tmphead;
     bae:	20 93 9f 03 	sts	0x039F, r18	; 0x80039f <USART_3_tx_head>
	ENTER_CRITICAL(W);
     bb2:	0f b6       	in	r0, 0x3f	; 63
     bb4:	f8 94       	cli
     bb6:	0f 92       	push	r0
	USART_3_tx_elements++;
     bb8:	80 91 9d 03 	lds	r24, 0x039D	; 0x80039d <USART_3_tx_elements>
     bbc:	8f 5f       	subi	r24, 0xFF	; 255
     bbe:	80 93 9d 03 	sts	0x039D, r24	; 0x80039d <USART_3_tx_elements>
	EXIT_CRITICAL(W);
     bc2:	0f 90       	pop	r0
     bc4:	0f be       	out	0x3f, r0	; 63
	/* Enable UDRE interrupt */
	UCSR3B |= (1 << UDRIE3);
     bc6:	e1 e3       	ldi	r30, 0x31	; 49
     bc8:	f1 e0       	ldi	r31, 0x01	; 1
     bca:	80 81       	ld	r24, Z
     bcc:	80 62       	ori	r24, 0x20	; 32
     bce:	80 83       	st	Z, r24
     bd0:	08 95       	ret

00000bd2 <USART_3_printCHAR>:
     bd2:	e0 df       	rcall	.-64     	; 0xb94 <USART_3_write>
     bd4:	80 e0       	ldi	r24, 0x00	; 0
     bd6:	90 e0       	ldi	r25, 0x00	; 0
     bd8:	08 95       	ret

00000bda <USART_3_init>:
     bda:	e5 e6       	ldi	r30, 0x65	; 101
     bdc:	f0 e0       	ldi	r31, 0x00	; 0
     bde:	80 81       	ld	r24, Z
     be0:	8b 7f       	andi	r24, 0xFB	; 251
     be2:	80 83       	st	Z, r24
     be4:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <__TEXT_REGION_LENGTH__+0x700135>
     be8:	87 e6       	ldi	r24, 0x67	; 103
     bea:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__TEXT_REGION_LENGTH__+0x700134>
     bee:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <__TEXT_REGION_LENGTH__+0x700130>
     bf2:	88 e9       	ldi	r24, 0x98	; 152
     bf4:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <__TEXT_REGION_LENGTH__+0x700131>
     bf8:	10 92 b1 03 	sts	0x03B1, r1	; 0x8003b1 <USART_3_rx_tail>
     bfc:	10 92 b2 03 	sts	0x03B2, r1	; 0x8003b2 <USART_3_rx_head>
     c00:	10 92 b0 03 	sts	0x03B0, r1	; 0x8003b0 <USART_3_rx_elements>
     c04:	10 92 9e 03 	sts	0x039E, r1	; 0x80039e <USART_3_tx_tail>
     c08:	10 92 9f 03 	sts	0x039F, r1	; 0x80039f <USART_3_tx_head>
     c0c:	10 92 9d 03 	sts	0x039D, r1	; 0x80039d <USART_3_tx_elements>
     c10:	80 e0       	ldi	r24, 0x00	; 0
     c12:	92 e0       	ldi	r25, 0x02	; 2
     c14:	90 93 44 05 	sts	0x0544, r25	; 0x800544 <__iob+0x3>
     c18:	80 93 43 05 	sts	0x0543, r24	; 0x800543 <__iob+0x2>
     c1c:	80 e0       	ldi	r24, 0x00	; 0
     c1e:	08 95       	ret

00000c20 <fastdelay_ms>:
 }

 // Uses Hardware timer 4 which is set to 4.096mS interrupt
 // delay will be 0 < 4.096mS for parameter of 1
 void fastdelay_ms(uint16_t count)
 {
     c20:	cf 93       	push	r28
     c22:	df 93       	push	r29
     c24:	00 d0       	rcall	.+0      	; 0xc26 <fastdelay_ms+0x6>
     c26:	1f 92       	push	r1
     c28:	cd b7       	in	r28, 0x3d	; 61
     c2a:	de b7       	in	r29, 0x3e	; 62

 // read the 16 bit 4mSec counter
 inline uint16_t fastmsectime(void)
 {
	 uint16_t currentms;
	 ENTER_CRITICAL(W);
     c2c:	0f b6       	in	r0, 0x3f	; 63
     c2e:	f8 94       	cli
     c30:	0f 92       	push	r0
	 currentms = m4sectimer;
     c32:	20 91 3f 05 	lds	r18, 0x053F	; 0x80053f <m4sectimer>
     c36:	30 91 40 05 	lds	r19, 0x0540	; 0x800540 <m4sectimer+0x1>
	 EXIT_CRITICAL(W);
     c3a:	0f 90       	pop	r0
     c3c:	0f be       	out	0x3f, r0	; 63
 // delay will be 0 < 4.096mS for parameter of 1
 void fastdelay_ms(uint16_t count)
 {
	 volatile uint16_t k,j;
	 while(1) {
		 j = fastmsectime();
     c3e:	3c 83       	std	Y+4, r19	; 0x04
     c40:	2b 83       	std	Y+3, r18	; 0x03
		 k = j + (uint16_t)count;
     c42:	2b 81       	ldd	r18, Y+3	; 0x03
     c44:	3c 81       	ldd	r19, Y+4	; 0x04
     c46:	82 0f       	add	r24, r18
     c48:	93 1f       	adc	r25, r19
     c4a:	9a 83       	std	Y+2, r25	; 0x02
     c4c:	89 83       	std	Y+1, r24	; 0x01

 // read the 16 bit 4mSec counter
 inline uint16_t fastmsectime(void)
 {
	 uint16_t currentms;
	 ENTER_CRITICAL(W);
     c4e:	0f b6       	in	r0, 0x3f	; 63
     c50:	f8 94       	cli
     c52:	0f 92       	push	r0
	 currentms = m4sectimer;
     c54:	80 91 3f 05 	lds	r24, 0x053F	; 0x80053f <m4sectimer>
     c58:	90 91 40 05 	lds	r25, 0x0540	; 0x800540 <m4sectimer+0x1>
	 EXIT_CRITICAL(W);
     c5c:	0f 90       	pop	r0
     c5e:	0f be       	out	0x3f, r0	; 63
	 volatile uint16_t k,j;
	 while(1) {
		 j = fastmsectime();
		 k = j + (uint16_t)count;
		 while(1) {
			 j = fastmsectime();
     c60:	9c 83       	std	Y+4, r25	; 0x04
     c62:	8b 83       	std	Y+3, r24	; 0x03
			 if (j >= k)
     c64:	2b 81       	ldd	r18, Y+3	; 0x03
     c66:	3c 81       	ldd	r19, Y+4	; 0x04
     c68:	89 81       	ldd	r24, Y+1	; 0x01
     c6a:	9a 81       	ldd	r25, Y+2	; 0x02
     c6c:	28 17       	cp	r18, r24
     c6e:	39 07       	cpc	r19, r25
     c70:	70 f3       	brcs	.-36     	; 0xc4e <fastdelay_ms+0x2e>
			 {
				 return;
			 }
		 }
	 }
     c72:	0f 90       	pop	r0
     c74:	0f 90       	pop	r0
     c76:	0f 90       	pop	r0
     c78:	0f 90       	pop	r0
     c7a:	df 91       	pop	r29
     c7c:	cf 91       	pop	r28
     c7e:	08 95       	ret

00000c80 <__vector_42>:
#include <compiler.h>

volatile uint16_t m4sectimer = 0;		// global 4.096mS tick count (16 bits)

ISR(TIMER4_COMPA_vect)
{
     c80:	1f 92       	push	r1
     c82:	0f 92       	push	r0
     c84:	0f b6       	in	r0, 0x3f	; 63
     c86:	0f 92       	push	r0
     c88:	11 24       	eor	r1, r1
     c8a:	8f 93       	push	r24
     c8c:	9f 93       	push	r25

	/* Insert your TIMER_0 compare channel A interrupt handling code here */
	m4sectimer++;
     c8e:	80 91 3f 05 	lds	r24, 0x053F	; 0x80053f <m4sectimer>
     c92:	90 91 40 05 	lds	r25, 0x0540	; 0x800540 <m4sectimer+0x1>
     c96:	01 96       	adiw	r24, 0x01	; 1
     c98:	90 93 40 05 	sts	0x0540, r25	; 0x800540 <m4sectimer+0x1>
     c9c:	80 93 3f 05 	sts	0x053F, r24	; 0x80053f <m4sectimer>
}
     ca0:	9f 91       	pop	r25
     ca2:	8f 91       	pop	r24
     ca4:	0f 90       	pop	r0
     ca6:	0f be       	out	0x3f, r0	; 63
     ca8:	0f 90       	pop	r0
     caa:	1f 90       	pop	r1
     cac:	18 95       	reti

00000cae <__vector_47>:

volatile uint64_t m1sectimer = 0;		// global 1mS tick count (64 bits)

ISR(TIMER5_COMPA_vect)
{
     cae:	1f 92       	push	r1
     cb0:	0f 92       	push	r0
     cb2:	0f b6       	in	r0, 0x3f	; 63
     cb4:	0f 92       	push	r0
     cb6:	11 24       	eor	r1, r1
     cb8:	2f 93       	push	r18
     cba:	3f 93       	push	r19
     cbc:	4f 93       	push	r20
     cbe:	5f 93       	push	r21
     cc0:	6f 93       	push	r22
     cc2:	7f 93       	push	r23
     cc4:	8f 93       	push	r24
     cc6:	9f 93       	push	r25
     cc8:	af 93       	push	r26
	/* Insert your TIMER_5 compare channel A interrupt handling code here */
	static uint16_t nextcmp = 0;

	nextcmp = nextcmp + 16000;		// 1mSec assuming 16MHz clock
     cca:	80 91 35 05 	lds	r24, 0x0535	; 0x800535 <nextcmp.3022>
     cce:	90 91 36 05 	lds	r25, 0x0536	; 0x800536 <nextcmp.3022+0x1>
     cd2:	80 58       	subi	r24, 0x80	; 128
     cd4:	91 4c       	sbci	r25, 0xC1	; 193
     cd6:	90 93 36 05 	sts	0x0536, r25	; 0x800536 <nextcmp.3022+0x1>
     cda:	80 93 35 05 	sts	0x0535, r24	; 0x800535 <nextcmp.3022>
	OCR5AH = nextcmp >> 8 ;
     cde:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
	OCR5AL = nextcmp & 0xff;
     ce2:	80 91 35 05 	lds	r24, 0x0535	; 0x800535 <nextcmp.3022>
     ce6:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
	m1sectimer++;
     cea:	20 91 37 05 	lds	r18, 0x0537	; 0x800537 <m1sectimer>
     cee:	30 91 38 05 	lds	r19, 0x0538	; 0x800538 <m1sectimer+0x1>
     cf2:	40 91 39 05 	lds	r20, 0x0539	; 0x800539 <m1sectimer+0x2>
     cf6:	50 91 3a 05 	lds	r21, 0x053A	; 0x80053a <m1sectimer+0x3>
     cfa:	60 91 3b 05 	lds	r22, 0x053B	; 0x80053b <m1sectimer+0x4>
     cfe:	70 91 3c 05 	lds	r23, 0x053C	; 0x80053c <m1sectimer+0x5>
     d02:	80 91 3d 05 	lds	r24, 0x053D	; 0x80053d <m1sectimer+0x6>
     d06:	90 91 3e 05 	lds	r25, 0x053E	; 0x80053e <m1sectimer+0x7>
     d0a:	a1 e0       	ldi	r26, 0x01	; 1
     d0c:	33 d0       	rcall	.+102    	; 0xd74 <__adddi3_s8>
     d0e:	20 93 37 05 	sts	0x0537, r18	; 0x800537 <m1sectimer>
     d12:	30 93 38 05 	sts	0x0538, r19	; 0x800538 <m1sectimer+0x1>
     d16:	40 93 39 05 	sts	0x0539, r20	; 0x800539 <m1sectimer+0x2>
     d1a:	50 93 3a 05 	sts	0x053A, r21	; 0x80053a <m1sectimer+0x3>
     d1e:	60 93 3b 05 	sts	0x053B, r22	; 0x80053b <m1sectimer+0x4>
     d22:	70 93 3c 05 	sts	0x053C, r23	; 0x80053c <m1sectimer+0x5>
     d26:	80 93 3d 05 	sts	0x053D, r24	; 0x80053d <m1sectimer+0x6>
     d2a:	90 93 3e 05 	sts	0x053E, r25	; 0x80053e <m1sectimer+0x7>
}
     d2e:	af 91       	pop	r26
     d30:	9f 91       	pop	r25
     d32:	8f 91       	pop	r24
     d34:	7f 91       	pop	r23
     d36:	6f 91       	pop	r22
     d38:	5f 91       	pop	r21
     d3a:	4f 91       	pop	r20
     d3c:	3f 91       	pop	r19
     d3e:	2f 91       	pop	r18
     d40:	0f 90       	pop	r0
     d42:	0f be       	out	0x3f, r0	; 63
     d44:	0f 90       	pop	r0
     d46:	1f 90       	pop	r1
     d48:	18 95       	reti

00000d4a <main>:
     d4a:	ed d9       	rcall	.-3110   	; 0x126 <atmel_start_init>
     d4c:	78 94       	sei
     d4e:	89 e6       	ldi	r24, 0x69	; 105
     d50:	93 e0       	ldi	r25, 0x03	; 3
     d52:	9f 93       	push	r25
     d54:	8f 93       	push	r24
     d56:	1a d0       	rcall	.+52     	; 0xd8c <printf>
     d58:	82 ee       	ldi	r24, 0xE2	; 226
     d5a:	94 e0       	ldi	r25, 0x04	; 4
     d5c:	61 df       	rcall	.-318    	; 0xc20 <fastdelay_ms>
     d5e:	0f 90       	pop	r0
     d60:	0f 90       	pop	r0
     d62:	c7 e7       	ldi	r28, 0x77	; 119
     d64:	d3 e0       	ldi	r29, 0x03	; 3
     d66:	2b db       	rcall	.-2474   	; 0x3be <setupneo>
     d68:	df 93       	push	r29
     d6a:	cf 93       	push	r28
     d6c:	0f d0       	rcall	.+30     	; 0xd8c <printf>
     d6e:	0f 90       	pop	r0
     d70:	0f 90       	pop	r0
     d72:	f9 cf       	rjmp	.-14     	; 0xd66 <main+0x1c>

00000d74 <__adddi3_s8>:
     d74:	00 24       	eor	r0, r0
     d76:	a7 fd       	sbrc	r26, 7
     d78:	00 94       	com	r0
     d7a:	2a 0f       	add	r18, r26
     d7c:	30 1d       	adc	r19, r0
     d7e:	40 1d       	adc	r20, r0
     d80:	50 1d       	adc	r21, r0
     d82:	60 1d       	adc	r22, r0
     d84:	70 1d       	adc	r23, r0
     d86:	80 1d       	adc	r24, r0
     d88:	90 1d       	adc	r25, r0
     d8a:	08 95       	ret

00000d8c <printf>:
     d8c:	cf 93       	push	r28
     d8e:	df 93       	push	r29
     d90:	cd b7       	in	r28, 0x3d	; 61
     d92:	de b7       	in	r29, 0x3e	; 62
     d94:	ae 01       	movw	r20, r28
     d96:	4a 5f       	subi	r20, 0xFA	; 250
     d98:	5f 4f       	sbci	r21, 0xFF	; 255
     d9a:	fa 01       	movw	r30, r20
     d9c:	61 91       	ld	r22, Z+
     d9e:	71 91       	ld	r23, Z+
     da0:	af 01       	movw	r20, r30
     da2:	80 91 43 05 	lds	r24, 0x0543	; 0x800543 <__iob+0x2>
     da6:	90 91 44 05 	lds	r25, 0x0544	; 0x800544 <__iob+0x3>
     daa:	66 d0       	rcall	.+204    	; 0xe78 <vfprintf>
     dac:	df 91       	pop	r29
     dae:	cf 91       	pop	r28
     db0:	08 95       	ret

00000db2 <putchar>:
     db2:	60 91 43 05 	lds	r22, 0x0543	; 0x800543 <__iob+0x2>
     db6:	70 91 44 05 	lds	r23, 0x0544	; 0x800544 <__iob+0x3>
     dba:	71 c2       	rjmp	.+1250   	; 0x129e <fputc>

00000dbc <puts>:
     dbc:	0f 93       	push	r16
     dbe:	1f 93       	push	r17
     dc0:	cf 93       	push	r28
     dc2:	df 93       	push	r29
     dc4:	e0 91 43 05 	lds	r30, 0x0543	; 0x800543 <__iob+0x2>
     dc8:	f0 91 44 05 	lds	r31, 0x0544	; 0x800544 <__iob+0x3>
     dcc:	23 81       	ldd	r18, Z+3	; 0x03
     dce:	21 ff       	sbrs	r18, 1
     dd0:	1b c0       	rjmp	.+54     	; 0xe08 <puts+0x4c>
     dd2:	8c 01       	movw	r16, r24
     dd4:	d0 e0       	ldi	r29, 0x00	; 0
     dd6:	c0 e0       	ldi	r28, 0x00	; 0
     dd8:	f8 01       	movw	r30, r16
     dda:	81 91       	ld	r24, Z+
     ddc:	8f 01       	movw	r16, r30
     dde:	60 91 43 05 	lds	r22, 0x0543	; 0x800543 <__iob+0x2>
     de2:	70 91 44 05 	lds	r23, 0x0544	; 0x800544 <__iob+0x3>
     de6:	db 01       	movw	r26, r22
     de8:	18 96       	adiw	r26, 0x08	; 8
     dea:	ed 91       	ld	r30, X+
     dec:	fc 91       	ld	r31, X
     dee:	19 97       	sbiw	r26, 0x09	; 9
     df0:	88 23       	and	r24, r24
     df2:	31 f0       	breq	.+12     	; 0xe00 <puts+0x44>
     df4:	19 95       	eicall
     df6:	89 2b       	or	r24, r25
     df8:	79 f3       	breq	.-34     	; 0xdd8 <puts+0x1c>
     dfa:	df ef       	ldi	r29, 0xFF	; 255
     dfc:	cf ef       	ldi	r28, 0xFF	; 255
     dfe:	ec cf       	rjmp	.-40     	; 0xdd8 <puts+0x1c>
     e00:	8a e0       	ldi	r24, 0x0A	; 10
     e02:	19 95       	eicall
     e04:	89 2b       	or	r24, r25
     e06:	19 f0       	breq	.+6      	; 0xe0e <puts+0x52>
     e08:	8f ef       	ldi	r24, 0xFF	; 255
     e0a:	9f ef       	ldi	r25, 0xFF	; 255
     e0c:	02 c0       	rjmp	.+4      	; 0xe12 <puts+0x56>
     e0e:	8d 2f       	mov	r24, r29
     e10:	9c 2f       	mov	r25, r28
     e12:	df 91       	pop	r29
     e14:	cf 91       	pop	r28
     e16:	1f 91       	pop	r17
     e18:	0f 91       	pop	r16
     e1a:	08 95       	ret

00000e1c <sprintf>:
     e1c:	0f 93       	push	r16
     e1e:	1f 93       	push	r17
     e20:	cf 93       	push	r28
     e22:	df 93       	push	r29
     e24:	cd b7       	in	r28, 0x3d	; 61
     e26:	de b7       	in	r29, 0x3e	; 62
     e28:	2e 97       	sbiw	r28, 0x0e	; 14
     e2a:	0f b6       	in	r0, 0x3f	; 63
     e2c:	f8 94       	cli
     e2e:	de bf       	out	0x3e, r29	; 62
     e30:	0f be       	out	0x3f, r0	; 63
     e32:	cd bf       	out	0x3d, r28	; 61
     e34:	0e 89       	ldd	r16, Y+22	; 0x16
     e36:	1f 89       	ldd	r17, Y+23	; 0x17
     e38:	86 e0       	ldi	r24, 0x06	; 6
     e3a:	8c 83       	std	Y+4, r24	; 0x04
     e3c:	1a 83       	std	Y+2, r17	; 0x02
     e3e:	09 83       	std	Y+1, r16	; 0x01
     e40:	8f ef       	ldi	r24, 0xFF	; 255
     e42:	9f e7       	ldi	r25, 0x7F	; 127
     e44:	9e 83       	std	Y+6, r25	; 0x06
     e46:	8d 83       	std	Y+5, r24	; 0x05
     e48:	ae 01       	movw	r20, r28
     e4a:	46 5e       	subi	r20, 0xE6	; 230
     e4c:	5f 4f       	sbci	r21, 0xFF	; 255
     e4e:	68 8d       	ldd	r22, Y+24	; 0x18
     e50:	79 8d       	ldd	r23, Y+25	; 0x19
     e52:	ce 01       	movw	r24, r28
     e54:	01 96       	adiw	r24, 0x01	; 1
     e56:	10 d0       	rcall	.+32     	; 0xe78 <vfprintf>
     e58:	ef 81       	ldd	r30, Y+7	; 0x07
     e5a:	f8 85       	ldd	r31, Y+8	; 0x08
     e5c:	e0 0f       	add	r30, r16
     e5e:	f1 1f       	adc	r31, r17
     e60:	10 82       	st	Z, r1
     e62:	2e 96       	adiw	r28, 0x0e	; 14
     e64:	0f b6       	in	r0, 0x3f	; 63
     e66:	f8 94       	cli
     e68:	de bf       	out	0x3e, r29	; 62
     e6a:	0f be       	out	0x3f, r0	; 63
     e6c:	cd bf       	out	0x3d, r28	; 61
     e6e:	df 91       	pop	r29
     e70:	cf 91       	pop	r28
     e72:	1f 91       	pop	r17
     e74:	0f 91       	pop	r16
     e76:	08 95       	ret

00000e78 <vfprintf>:
     e78:	2f 92       	push	r2
     e7a:	3f 92       	push	r3
     e7c:	4f 92       	push	r4
     e7e:	5f 92       	push	r5
     e80:	6f 92       	push	r6
     e82:	7f 92       	push	r7
     e84:	8f 92       	push	r8
     e86:	9f 92       	push	r9
     e88:	af 92       	push	r10
     e8a:	bf 92       	push	r11
     e8c:	cf 92       	push	r12
     e8e:	df 92       	push	r13
     e90:	ef 92       	push	r14
     e92:	ff 92       	push	r15
     e94:	0f 93       	push	r16
     e96:	1f 93       	push	r17
     e98:	cf 93       	push	r28
     e9a:	df 93       	push	r29
     e9c:	cd b7       	in	r28, 0x3d	; 61
     e9e:	de b7       	in	r29, 0x3e	; 62
     ea0:	2b 97       	sbiw	r28, 0x0b	; 11
     ea2:	0f b6       	in	r0, 0x3f	; 63
     ea4:	f8 94       	cli
     ea6:	de bf       	out	0x3e, r29	; 62
     ea8:	0f be       	out	0x3f, r0	; 63
     eaa:	cd bf       	out	0x3d, r28	; 61
     eac:	6c 01       	movw	r12, r24
     eae:	7b 01       	movw	r14, r22
     eb0:	8a 01       	movw	r16, r20
     eb2:	fc 01       	movw	r30, r24
     eb4:	17 82       	std	Z+7, r1	; 0x07
     eb6:	16 82       	std	Z+6, r1	; 0x06
     eb8:	83 81       	ldd	r24, Z+3	; 0x03
     eba:	81 ff       	sbrs	r24, 1
     ebc:	bf c1       	rjmp	.+894    	; 0x123c <vfprintf+0x3c4>
     ebe:	ce 01       	movw	r24, r28
     ec0:	01 96       	adiw	r24, 0x01	; 1
     ec2:	3c 01       	movw	r6, r24
     ec4:	f6 01       	movw	r30, r12
     ec6:	93 81       	ldd	r25, Z+3	; 0x03
     ec8:	f7 01       	movw	r30, r14
     eca:	93 fd       	sbrc	r25, 3
     ecc:	85 91       	lpm	r24, Z+
     ece:	93 ff       	sbrs	r25, 3
     ed0:	81 91       	ld	r24, Z+
     ed2:	7f 01       	movw	r14, r30
     ed4:	88 23       	and	r24, r24
     ed6:	09 f4       	brne	.+2      	; 0xeda <vfprintf+0x62>
     ed8:	ad c1       	rjmp	.+858    	; 0x1234 <vfprintf+0x3bc>
     eda:	85 32       	cpi	r24, 0x25	; 37
     edc:	39 f4       	brne	.+14     	; 0xeec <vfprintf+0x74>
     ede:	93 fd       	sbrc	r25, 3
     ee0:	85 91       	lpm	r24, Z+
     ee2:	93 ff       	sbrs	r25, 3
     ee4:	81 91       	ld	r24, Z+
     ee6:	7f 01       	movw	r14, r30
     ee8:	85 32       	cpi	r24, 0x25	; 37
     eea:	21 f4       	brne	.+8      	; 0xef4 <vfprintf+0x7c>
     eec:	b6 01       	movw	r22, r12
     eee:	90 e0       	ldi	r25, 0x00	; 0
     ef0:	d6 d1       	rcall	.+940    	; 0x129e <fputc>
     ef2:	e8 cf       	rjmp	.-48     	; 0xec4 <vfprintf+0x4c>
     ef4:	91 2c       	mov	r9, r1
     ef6:	21 2c       	mov	r2, r1
     ef8:	31 2c       	mov	r3, r1
     efa:	ff e1       	ldi	r31, 0x1F	; 31
     efc:	f3 15       	cp	r31, r3
     efe:	d8 f0       	brcs	.+54     	; 0xf36 <vfprintf+0xbe>
     f00:	8b 32       	cpi	r24, 0x2B	; 43
     f02:	79 f0       	breq	.+30     	; 0xf22 <vfprintf+0xaa>
     f04:	38 f4       	brcc	.+14     	; 0xf14 <vfprintf+0x9c>
     f06:	80 32       	cpi	r24, 0x20	; 32
     f08:	79 f0       	breq	.+30     	; 0xf28 <vfprintf+0xb0>
     f0a:	83 32       	cpi	r24, 0x23	; 35
     f0c:	a1 f4       	brne	.+40     	; 0xf36 <vfprintf+0xbe>
     f0e:	23 2d       	mov	r18, r3
     f10:	20 61       	ori	r18, 0x10	; 16
     f12:	1d c0       	rjmp	.+58     	; 0xf4e <vfprintf+0xd6>
     f14:	8d 32       	cpi	r24, 0x2D	; 45
     f16:	61 f0       	breq	.+24     	; 0xf30 <vfprintf+0xb8>
     f18:	80 33       	cpi	r24, 0x30	; 48
     f1a:	69 f4       	brne	.+26     	; 0xf36 <vfprintf+0xbe>
     f1c:	23 2d       	mov	r18, r3
     f1e:	21 60       	ori	r18, 0x01	; 1
     f20:	16 c0       	rjmp	.+44     	; 0xf4e <vfprintf+0xd6>
     f22:	83 2d       	mov	r24, r3
     f24:	82 60       	ori	r24, 0x02	; 2
     f26:	38 2e       	mov	r3, r24
     f28:	e3 2d       	mov	r30, r3
     f2a:	e4 60       	ori	r30, 0x04	; 4
     f2c:	3e 2e       	mov	r3, r30
     f2e:	2a c0       	rjmp	.+84     	; 0xf84 <vfprintf+0x10c>
     f30:	f3 2d       	mov	r31, r3
     f32:	f8 60       	ori	r31, 0x08	; 8
     f34:	1d c0       	rjmp	.+58     	; 0xf70 <vfprintf+0xf8>
     f36:	37 fc       	sbrc	r3, 7
     f38:	2d c0       	rjmp	.+90     	; 0xf94 <vfprintf+0x11c>
     f3a:	20 ed       	ldi	r18, 0xD0	; 208
     f3c:	28 0f       	add	r18, r24
     f3e:	2a 30       	cpi	r18, 0x0A	; 10
     f40:	40 f0       	brcs	.+16     	; 0xf52 <vfprintf+0xda>
     f42:	8e 32       	cpi	r24, 0x2E	; 46
     f44:	b9 f4       	brne	.+46     	; 0xf74 <vfprintf+0xfc>
     f46:	36 fc       	sbrc	r3, 6
     f48:	75 c1       	rjmp	.+746    	; 0x1234 <vfprintf+0x3bc>
     f4a:	23 2d       	mov	r18, r3
     f4c:	20 64       	ori	r18, 0x40	; 64
     f4e:	32 2e       	mov	r3, r18
     f50:	19 c0       	rjmp	.+50     	; 0xf84 <vfprintf+0x10c>
     f52:	36 fe       	sbrs	r3, 6
     f54:	06 c0       	rjmp	.+12     	; 0xf62 <vfprintf+0xea>
     f56:	8a e0       	ldi	r24, 0x0A	; 10
     f58:	98 9e       	mul	r9, r24
     f5a:	20 0d       	add	r18, r0
     f5c:	11 24       	eor	r1, r1
     f5e:	92 2e       	mov	r9, r18
     f60:	11 c0       	rjmp	.+34     	; 0xf84 <vfprintf+0x10c>
     f62:	ea e0       	ldi	r30, 0x0A	; 10
     f64:	2e 9e       	mul	r2, r30
     f66:	20 0d       	add	r18, r0
     f68:	11 24       	eor	r1, r1
     f6a:	22 2e       	mov	r2, r18
     f6c:	f3 2d       	mov	r31, r3
     f6e:	f0 62       	ori	r31, 0x20	; 32
     f70:	3f 2e       	mov	r3, r31
     f72:	08 c0       	rjmp	.+16     	; 0xf84 <vfprintf+0x10c>
     f74:	8c 36       	cpi	r24, 0x6C	; 108
     f76:	21 f4       	brne	.+8      	; 0xf80 <vfprintf+0x108>
     f78:	83 2d       	mov	r24, r3
     f7a:	80 68       	ori	r24, 0x80	; 128
     f7c:	38 2e       	mov	r3, r24
     f7e:	02 c0       	rjmp	.+4      	; 0xf84 <vfprintf+0x10c>
     f80:	88 36       	cpi	r24, 0x68	; 104
     f82:	41 f4       	brne	.+16     	; 0xf94 <vfprintf+0x11c>
     f84:	f7 01       	movw	r30, r14
     f86:	93 fd       	sbrc	r25, 3
     f88:	85 91       	lpm	r24, Z+
     f8a:	93 ff       	sbrs	r25, 3
     f8c:	81 91       	ld	r24, Z+
     f8e:	7f 01       	movw	r14, r30
     f90:	81 11       	cpse	r24, r1
     f92:	b3 cf       	rjmp	.-154    	; 0xefa <vfprintf+0x82>
     f94:	98 2f       	mov	r25, r24
     f96:	9f 7d       	andi	r25, 0xDF	; 223
     f98:	95 54       	subi	r25, 0x45	; 69
     f9a:	93 30       	cpi	r25, 0x03	; 3
     f9c:	28 f4       	brcc	.+10     	; 0xfa8 <vfprintf+0x130>
     f9e:	0c 5f       	subi	r16, 0xFC	; 252
     fa0:	1f 4f       	sbci	r17, 0xFF	; 255
     fa2:	9f e3       	ldi	r25, 0x3F	; 63
     fa4:	99 83       	std	Y+1, r25	; 0x01
     fa6:	0d c0       	rjmp	.+26     	; 0xfc2 <vfprintf+0x14a>
     fa8:	83 36       	cpi	r24, 0x63	; 99
     faa:	31 f0       	breq	.+12     	; 0xfb8 <vfprintf+0x140>
     fac:	83 37       	cpi	r24, 0x73	; 115
     fae:	71 f0       	breq	.+28     	; 0xfcc <vfprintf+0x154>
     fb0:	83 35       	cpi	r24, 0x53	; 83
     fb2:	09 f0       	breq	.+2      	; 0xfb6 <vfprintf+0x13e>
     fb4:	55 c0       	rjmp	.+170    	; 0x1060 <vfprintf+0x1e8>
     fb6:	20 c0       	rjmp	.+64     	; 0xff8 <vfprintf+0x180>
     fb8:	f8 01       	movw	r30, r16
     fba:	80 81       	ld	r24, Z
     fbc:	89 83       	std	Y+1, r24	; 0x01
     fbe:	0e 5f       	subi	r16, 0xFE	; 254
     fc0:	1f 4f       	sbci	r17, 0xFF	; 255
     fc2:	88 24       	eor	r8, r8
     fc4:	83 94       	inc	r8
     fc6:	91 2c       	mov	r9, r1
     fc8:	53 01       	movw	r10, r6
     fca:	12 c0       	rjmp	.+36     	; 0xff0 <vfprintf+0x178>
     fcc:	28 01       	movw	r4, r16
     fce:	f2 e0       	ldi	r31, 0x02	; 2
     fd0:	4f 0e       	add	r4, r31
     fd2:	51 1c       	adc	r5, r1
     fd4:	f8 01       	movw	r30, r16
     fd6:	a0 80       	ld	r10, Z
     fd8:	b1 80       	ldd	r11, Z+1	; 0x01
     fda:	36 fe       	sbrs	r3, 6
     fdc:	03 c0       	rjmp	.+6      	; 0xfe4 <vfprintf+0x16c>
     fde:	69 2d       	mov	r22, r9
     fe0:	70 e0       	ldi	r23, 0x00	; 0
     fe2:	02 c0       	rjmp	.+4      	; 0xfe8 <vfprintf+0x170>
     fe4:	6f ef       	ldi	r22, 0xFF	; 255
     fe6:	7f ef       	ldi	r23, 0xFF	; 255
     fe8:	c5 01       	movw	r24, r10
     fea:	4e d1       	rcall	.+668    	; 0x1288 <strnlen>
     fec:	4c 01       	movw	r8, r24
     fee:	82 01       	movw	r16, r4
     ff0:	f3 2d       	mov	r31, r3
     ff2:	ff 77       	andi	r31, 0x7F	; 127
     ff4:	3f 2e       	mov	r3, r31
     ff6:	15 c0       	rjmp	.+42     	; 0x1022 <vfprintf+0x1aa>
     ff8:	28 01       	movw	r4, r16
     ffa:	22 e0       	ldi	r18, 0x02	; 2
     ffc:	42 0e       	add	r4, r18
     ffe:	51 1c       	adc	r5, r1
    1000:	f8 01       	movw	r30, r16
    1002:	a0 80       	ld	r10, Z
    1004:	b1 80       	ldd	r11, Z+1	; 0x01
    1006:	36 fe       	sbrs	r3, 6
    1008:	03 c0       	rjmp	.+6      	; 0x1010 <vfprintf+0x198>
    100a:	69 2d       	mov	r22, r9
    100c:	70 e0       	ldi	r23, 0x00	; 0
    100e:	02 c0       	rjmp	.+4      	; 0x1014 <vfprintf+0x19c>
    1010:	6f ef       	ldi	r22, 0xFF	; 255
    1012:	7f ef       	ldi	r23, 0xFF	; 255
    1014:	c5 01       	movw	r24, r10
    1016:	2d d1       	rcall	.+602    	; 0x1272 <strnlen_P>
    1018:	4c 01       	movw	r8, r24
    101a:	f3 2d       	mov	r31, r3
    101c:	f0 68       	ori	r31, 0x80	; 128
    101e:	3f 2e       	mov	r3, r31
    1020:	82 01       	movw	r16, r4
    1022:	33 fc       	sbrc	r3, 3
    1024:	19 c0       	rjmp	.+50     	; 0x1058 <vfprintf+0x1e0>
    1026:	82 2d       	mov	r24, r2
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	88 16       	cp	r8, r24
    102c:	99 06       	cpc	r9, r25
    102e:	a0 f4       	brcc	.+40     	; 0x1058 <vfprintf+0x1e0>
    1030:	b6 01       	movw	r22, r12
    1032:	80 e2       	ldi	r24, 0x20	; 32
    1034:	90 e0       	ldi	r25, 0x00	; 0
    1036:	33 d1       	rcall	.+614    	; 0x129e <fputc>
    1038:	2a 94       	dec	r2
    103a:	f5 cf       	rjmp	.-22     	; 0x1026 <vfprintf+0x1ae>
    103c:	f5 01       	movw	r30, r10
    103e:	37 fc       	sbrc	r3, 7
    1040:	85 91       	lpm	r24, Z+
    1042:	37 fe       	sbrs	r3, 7
    1044:	81 91       	ld	r24, Z+
    1046:	5f 01       	movw	r10, r30
    1048:	b6 01       	movw	r22, r12
    104a:	90 e0       	ldi	r25, 0x00	; 0
    104c:	28 d1       	rcall	.+592    	; 0x129e <fputc>
    104e:	21 10       	cpse	r2, r1
    1050:	2a 94       	dec	r2
    1052:	21 e0       	ldi	r18, 0x01	; 1
    1054:	82 1a       	sub	r8, r18
    1056:	91 08       	sbc	r9, r1
    1058:	81 14       	cp	r8, r1
    105a:	91 04       	cpc	r9, r1
    105c:	79 f7       	brne	.-34     	; 0x103c <vfprintf+0x1c4>
    105e:	e1 c0       	rjmp	.+450    	; 0x1222 <vfprintf+0x3aa>
    1060:	84 36       	cpi	r24, 0x64	; 100
    1062:	11 f0       	breq	.+4      	; 0x1068 <vfprintf+0x1f0>
    1064:	89 36       	cpi	r24, 0x69	; 105
    1066:	39 f5       	brne	.+78     	; 0x10b6 <vfprintf+0x23e>
    1068:	f8 01       	movw	r30, r16
    106a:	37 fe       	sbrs	r3, 7
    106c:	07 c0       	rjmp	.+14     	; 0x107c <vfprintf+0x204>
    106e:	60 81       	ld	r22, Z
    1070:	71 81       	ldd	r23, Z+1	; 0x01
    1072:	82 81       	ldd	r24, Z+2	; 0x02
    1074:	93 81       	ldd	r25, Z+3	; 0x03
    1076:	0c 5f       	subi	r16, 0xFC	; 252
    1078:	1f 4f       	sbci	r17, 0xFF	; 255
    107a:	08 c0       	rjmp	.+16     	; 0x108c <vfprintf+0x214>
    107c:	60 81       	ld	r22, Z
    107e:	71 81       	ldd	r23, Z+1	; 0x01
    1080:	07 2e       	mov	r0, r23
    1082:	00 0c       	add	r0, r0
    1084:	88 0b       	sbc	r24, r24
    1086:	99 0b       	sbc	r25, r25
    1088:	0e 5f       	subi	r16, 0xFE	; 254
    108a:	1f 4f       	sbci	r17, 0xFF	; 255
    108c:	f3 2d       	mov	r31, r3
    108e:	ff 76       	andi	r31, 0x6F	; 111
    1090:	3f 2e       	mov	r3, r31
    1092:	97 ff       	sbrs	r25, 7
    1094:	09 c0       	rjmp	.+18     	; 0x10a8 <vfprintf+0x230>
    1096:	90 95       	com	r25
    1098:	80 95       	com	r24
    109a:	70 95       	com	r23
    109c:	61 95       	neg	r22
    109e:	7f 4f       	sbci	r23, 0xFF	; 255
    10a0:	8f 4f       	sbci	r24, 0xFF	; 255
    10a2:	9f 4f       	sbci	r25, 0xFF	; 255
    10a4:	f0 68       	ori	r31, 0x80	; 128
    10a6:	3f 2e       	mov	r3, r31
    10a8:	2a e0       	ldi	r18, 0x0A	; 10
    10aa:	30 e0       	ldi	r19, 0x00	; 0
    10ac:	a3 01       	movw	r20, r6
    10ae:	33 d1       	rcall	.+614    	; 0x1316 <__ultoa_invert>
    10b0:	88 2e       	mov	r8, r24
    10b2:	86 18       	sub	r8, r6
    10b4:	44 c0       	rjmp	.+136    	; 0x113e <vfprintf+0x2c6>
    10b6:	85 37       	cpi	r24, 0x75	; 117
    10b8:	31 f4       	brne	.+12     	; 0x10c6 <vfprintf+0x24e>
    10ba:	23 2d       	mov	r18, r3
    10bc:	2f 7e       	andi	r18, 0xEF	; 239
    10be:	b2 2e       	mov	r11, r18
    10c0:	2a e0       	ldi	r18, 0x0A	; 10
    10c2:	30 e0       	ldi	r19, 0x00	; 0
    10c4:	25 c0       	rjmp	.+74     	; 0x1110 <vfprintf+0x298>
    10c6:	93 2d       	mov	r25, r3
    10c8:	99 7f       	andi	r25, 0xF9	; 249
    10ca:	b9 2e       	mov	r11, r25
    10cc:	8f 36       	cpi	r24, 0x6F	; 111
    10ce:	c1 f0       	breq	.+48     	; 0x1100 <vfprintf+0x288>
    10d0:	18 f4       	brcc	.+6      	; 0x10d8 <vfprintf+0x260>
    10d2:	88 35       	cpi	r24, 0x58	; 88
    10d4:	79 f0       	breq	.+30     	; 0x10f4 <vfprintf+0x27c>
    10d6:	ae c0       	rjmp	.+348    	; 0x1234 <vfprintf+0x3bc>
    10d8:	80 37       	cpi	r24, 0x70	; 112
    10da:	19 f0       	breq	.+6      	; 0x10e2 <vfprintf+0x26a>
    10dc:	88 37       	cpi	r24, 0x78	; 120
    10de:	21 f0       	breq	.+8      	; 0x10e8 <vfprintf+0x270>
    10e0:	a9 c0       	rjmp	.+338    	; 0x1234 <vfprintf+0x3bc>
    10e2:	e9 2f       	mov	r30, r25
    10e4:	e0 61       	ori	r30, 0x10	; 16
    10e6:	be 2e       	mov	r11, r30
    10e8:	b4 fe       	sbrs	r11, 4
    10ea:	0d c0       	rjmp	.+26     	; 0x1106 <vfprintf+0x28e>
    10ec:	fb 2d       	mov	r31, r11
    10ee:	f4 60       	ori	r31, 0x04	; 4
    10f0:	bf 2e       	mov	r11, r31
    10f2:	09 c0       	rjmp	.+18     	; 0x1106 <vfprintf+0x28e>
    10f4:	34 fe       	sbrs	r3, 4
    10f6:	0a c0       	rjmp	.+20     	; 0x110c <vfprintf+0x294>
    10f8:	29 2f       	mov	r18, r25
    10fa:	26 60       	ori	r18, 0x06	; 6
    10fc:	b2 2e       	mov	r11, r18
    10fe:	06 c0       	rjmp	.+12     	; 0x110c <vfprintf+0x294>
    1100:	28 e0       	ldi	r18, 0x08	; 8
    1102:	30 e0       	ldi	r19, 0x00	; 0
    1104:	05 c0       	rjmp	.+10     	; 0x1110 <vfprintf+0x298>
    1106:	20 e1       	ldi	r18, 0x10	; 16
    1108:	30 e0       	ldi	r19, 0x00	; 0
    110a:	02 c0       	rjmp	.+4      	; 0x1110 <vfprintf+0x298>
    110c:	20 e1       	ldi	r18, 0x10	; 16
    110e:	32 e0       	ldi	r19, 0x02	; 2
    1110:	f8 01       	movw	r30, r16
    1112:	b7 fe       	sbrs	r11, 7
    1114:	07 c0       	rjmp	.+14     	; 0x1124 <vfprintf+0x2ac>
    1116:	60 81       	ld	r22, Z
    1118:	71 81       	ldd	r23, Z+1	; 0x01
    111a:	82 81       	ldd	r24, Z+2	; 0x02
    111c:	93 81       	ldd	r25, Z+3	; 0x03
    111e:	0c 5f       	subi	r16, 0xFC	; 252
    1120:	1f 4f       	sbci	r17, 0xFF	; 255
    1122:	06 c0       	rjmp	.+12     	; 0x1130 <vfprintf+0x2b8>
    1124:	60 81       	ld	r22, Z
    1126:	71 81       	ldd	r23, Z+1	; 0x01
    1128:	80 e0       	ldi	r24, 0x00	; 0
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	0e 5f       	subi	r16, 0xFE	; 254
    112e:	1f 4f       	sbci	r17, 0xFF	; 255
    1130:	a3 01       	movw	r20, r6
    1132:	f1 d0       	rcall	.+482    	; 0x1316 <__ultoa_invert>
    1134:	88 2e       	mov	r8, r24
    1136:	86 18       	sub	r8, r6
    1138:	fb 2d       	mov	r31, r11
    113a:	ff 77       	andi	r31, 0x7F	; 127
    113c:	3f 2e       	mov	r3, r31
    113e:	36 fe       	sbrs	r3, 6
    1140:	0d c0       	rjmp	.+26     	; 0x115c <vfprintf+0x2e4>
    1142:	23 2d       	mov	r18, r3
    1144:	2e 7f       	andi	r18, 0xFE	; 254
    1146:	a2 2e       	mov	r10, r18
    1148:	89 14       	cp	r8, r9
    114a:	58 f4       	brcc	.+22     	; 0x1162 <vfprintf+0x2ea>
    114c:	34 fe       	sbrs	r3, 4
    114e:	0b c0       	rjmp	.+22     	; 0x1166 <vfprintf+0x2ee>
    1150:	32 fc       	sbrc	r3, 2
    1152:	09 c0       	rjmp	.+18     	; 0x1166 <vfprintf+0x2ee>
    1154:	83 2d       	mov	r24, r3
    1156:	8e 7e       	andi	r24, 0xEE	; 238
    1158:	a8 2e       	mov	r10, r24
    115a:	05 c0       	rjmp	.+10     	; 0x1166 <vfprintf+0x2ee>
    115c:	b8 2c       	mov	r11, r8
    115e:	a3 2c       	mov	r10, r3
    1160:	03 c0       	rjmp	.+6      	; 0x1168 <vfprintf+0x2f0>
    1162:	b8 2c       	mov	r11, r8
    1164:	01 c0       	rjmp	.+2      	; 0x1168 <vfprintf+0x2f0>
    1166:	b9 2c       	mov	r11, r9
    1168:	a4 fe       	sbrs	r10, 4
    116a:	0f c0       	rjmp	.+30     	; 0x118a <vfprintf+0x312>
    116c:	fe 01       	movw	r30, r28
    116e:	e8 0d       	add	r30, r8
    1170:	f1 1d       	adc	r31, r1
    1172:	80 81       	ld	r24, Z
    1174:	80 33       	cpi	r24, 0x30	; 48
    1176:	21 f4       	brne	.+8      	; 0x1180 <vfprintf+0x308>
    1178:	9a 2d       	mov	r25, r10
    117a:	99 7e       	andi	r25, 0xE9	; 233
    117c:	a9 2e       	mov	r10, r25
    117e:	09 c0       	rjmp	.+18     	; 0x1192 <vfprintf+0x31a>
    1180:	a2 fe       	sbrs	r10, 2
    1182:	06 c0       	rjmp	.+12     	; 0x1190 <vfprintf+0x318>
    1184:	b3 94       	inc	r11
    1186:	b3 94       	inc	r11
    1188:	04 c0       	rjmp	.+8      	; 0x1192 <vfprintf+0x31a>
    118a:	8a 2d       	mov	r24, r10
    118c:	86 78       	andi	r24, 0x86	; 134
    118e:	09 f0       	breq	.+2      	; 0x1192 <vfprintf+0x31a>
    1190:	b3 94       	inc	r11
    1192:	a3 fc       	sbrc	r10, 3
    1194:	10 c0       	rjmp	.+32     	; 0x11b6 <vfprintf+0x33e>
    1196:	a0 fe       	sbrs	r10, 0
    1198:	06 c0       	rjmp	.+12     	; 0x11a6 <vfprintf+0x32e>
    119a:	b2 14       	cp	r11, r2
    119c:	80 f4       	brcc	.+32     	; 0x11be <vfprintf+0x346>
    119e:	28 0c       	add	r2, r8
    11a0:	92 2c       	mov	r9, r2
    11a2:	9b 18       	sub	r9, r11
    11a4:	0d c0       	rjmp	.+26     	; 0x11c0 <vfprintf+0x348>
    11a6:	b2 14       	cp	r11, r2
    11a8:	58 f4       	brcc	.+22     	; 0x11c0 <vfprintf+0x348>
    11aa:	b6 01       	movw	r22, r12
    11ac:	80 e2       	ldi	r24, 0x20	; 32
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	76 d0       	rcall	.+236    	; 0x129e <fputc>
    11b2:	b3 94       	inc	r11
    11b4:	f8 cf       	rjmp	.-16     	; 0x11a6 <vfprintf+0x32e>
    11b6:	b2 14       	cp	r11, r2
    11b8:	18 f4       	brcc	.+6      	; 0x11c0 <vfprintf+0x348>
    11ba:	2b 18       	sub	r2, r11
    11bc:	02 c0       	rjmp	.+4      	; 0x11c2 <vfprintf+0x34a>
    11be:	98 2c       	mov	r9, r8
    11c0:	21 2c       	mov	r2, r1
    11c2:	a4 fe       	sbrs	r10, 4
    11c4:	0f c0       	rjmp	.+30     	; 0x11e4 <vfprintf+0x36c>
    11c6:	b6 01       	movw	r22, r12
    11c8:	80 e3       	ldi	r24, 0x30	; 48
    11ca:	90 e0       	ldi	r25, 0x00	; 0
    11cc:	68 d0       	rcall	.+208    	; 0x129e <fputc>
    11ce:	a2 fe       	sbrs	r10, 2
    11d0:	16 c0       	rjmp	.+44     	; 0x11fe <vfprintf+0x386>
    11d2:	a1 fc       	sbrc	r10, 1
    11d4:	03 c0       	rjmp	.+6      	; 0x11dc <vfprintf+0x364>
    11d6:	88 e7       	ldi	r24, 0x78	; 120
    11d8:	90 e0       	ldi	r25, 0x00	; 0
    11da:	02 c0       	rjmp	.+4      	; 0x11e0 <vfprintf+0x368>
    11dc:	88 e5       	ldi	r24, 0x58	; 88
    11de:	90 e0       	ldi	r25, 0x00	; 0
    11e0:	b6 01       	movw	r22, r12
    11e2:	0c c0       	rjmp	.+24     	; 0x11fc <vfprintf+0x384>
    11e4:	8a 2d       	mov	r24, r10
    11e6:	86 78       	andi	r24, 0x86	; 134
    11e8:	51 f0       	breq	.+20     	; 0x11fe <vfprintf+0x386>
    11ea:	a1 fe       	sbrs	r10, 1
    11ec:	02 c0       	rjmp	.+4      	; 0x11f2 <vfprintf+0x37a>
    11ee:	8b e2       	ldi	r24, 0x2B	; 43
    11f0:	01 c0       	rjmp	.+2      	; 0x11f4 <vfprintf+0x37c>
    11f2:	80 e2       	ldi	r24, 0x20	; 32
    11f4:	a7 fc       	sbrc	r10, 7
    11f6:	8d e2       	ldi	r24, 0x2D	; 45
    11f8:	b6 01       	movw	r22, r12
    11fa:	90 e0       	ldi	r25, 0x00	; 0
    11fc:	50 d0       	rcall	.+160    	; 0x129e <fputc>
    11fe:	89 14       	cp	r8, r9
    1200:	30 f4       	brcc	.+12     	; 0x120e <vfprintf+0x396>
    1202:	b6 01       	movw	r22, r12
    1204:	80 e3       	ldi	r24, 0x30	; 48
    1206:	90 e0       	ldi	r25, 0x00	; 0
    1208:	4a d0       	rcall	.+148    	; 0x129e <fputc>
    120a:	9a 94       	dec	r9
    120c:	f8 cf       	rjmp	.-16     	; 0x11fe <vfprintf+0x386>
    120e:	8a 94       	dec	r8
    1210:	f3 01       	movw	r30, r6
    1212:	e8 0d       	add	r30, r8
    1214:	f1 1d       	adc	r31, r1
    1216:	80 81       	ld	r24, Z
    1218:	b6 01       	movw	r22, r12
    121a:	90 e0       	ldi	r25, 0x00	; 0
    121c:	40 d0       	rcall	.+128    	; 0x129e <fputc>
    121e:	81 10       	cpse	r8, r1
    1220:	f6 cf       	rjmp	.-20     	; 0x120e <vfprintf+0x396>
    1222:	22 20       	and	r2, r2
    1224:	09 f4       	brne	.+2      	; 0x1228 <vfprintf+0x3b0>
    1226:	4e ce       	rjmp	.-868    	; 0xec4 <vfprintf+0x4c>
    1228:	b6 01       	movw	r22, r12
    122a:	80 e2       	ldi	r24, 0x20	; 32
    122c:	90 e0       	ldi	r25, 0x00	; 0
    122e:	37 d0       	rcall	.+110    	; 0x129e <fputc>
    1230:	2a 94       	dec	r2
    1232:	f7 cf       	rjmp	.-18     	; 0x1222 <vfprintf+0x3aa>
    1234:	f6 01       	movw	r30, r12
    1236:	86 81       	ldd	r24, Z+6	; 0x06
    1238:	97 81       	ldd	r25, Z+7	; 0x07
    123a:	02 c0       	rjmp	.+4      	; 0x1240 <vfprintf+0x3c8>
    123c:	8f ef       	ldi	r24, 0xFF	; 255
    123e:	9f ef       	ldi	r25, 0xFF	; 255
    1240:	2b 96       	adiw	r28, 0x0b	; 11
    1242:	0f b6       	in	r0, 0x3f	; 63
    1244:	f8 94       	cli
    1246:	de bf       	out	0x3e, r29	; 62
    1248:	0f be       	out	0x3f, r0	; 63
    124a:	cd bf       	out	0x3d, r28	; 61
    124c:	df 91       	pop	r29
    124e:	cf 91       	pop	r28
    1250:	1f 91       	pop	r17
    1252:	0f 91       	pop	r16
    1254:	ff 90       	pop	r15
    1256:	ef 90       	pop	r14
    1258:	df 90       	pop	r13
    125a:	cf 90       	pop	r12
    125c:	bf 90       	pop	r11
    125e:	af 90       	pop	r10
    1260:	9f 90       	pop	r9
    1262:	8f 90       	pop	r8
    1264:	7f 90       	pop	r7
    1266:	6f 90       	pop	r6
    1268:	5f 90       	pop	r5
    126a:	4f 90       	pop	r4
    126c:	3f 90       	pop	r3
    126e:	2f 90       	pop	r2
    1270:	08 95       	ret

00001272 <strnlen_P>:
    1272:	fc 01       	movw	r30, r24
    1274:	05 90       	lpm	r0, Z+
    1276:	61 50       	subi	r22, 0x01	; 1
    1278:	70 40       	sbci	r23, 0x00	; 0
    127a:	01 10       	cpse	r0, r1
    127c:	d8 f7       	brcc	.-10     	; 0x1274 <strnlen_P+0x2>
    127e:	80 95       	com	r24
    1280:	90 95       	com	r25
    1282:	8e 0f       	add	r24, r30
    1284:	9f 1f       	adc	r25, r31
    1286:	08 95       	ret

00001288 <strnlen>:
    1288:	fc 01       	movw	r30, r24
    128a:	61 50       	subi	r22, 0x01	; 1
    128c:	70 40       	sbci	r23, 0x00	; 0
    128e:	01 90       	ld	r0, Z+
    1290:	01 10       	cpse	r0, r1
    1292:	d8 f7       	brcc	.-10     	; 0x128a <strnlen+0x2>
    1294:	80 95       	com	r24
    1296:	90 95       	com	r25
    1298:	8e 0f       	add	r24, r30
    129a:	9f 1f       	adc	r25, r31
    129c:	08 95       	ret

0000129e <fputc>:
    129e:	0f 93       	push	r16
    12a0:	1f 93       	push	r17
    12a2:	cf 93       	push	r28
    12a4:	df 93       	push	r29
    12a6:	fb 01       	movw	r30, r22
    12a8:	23 81       	ldd	r18, Z+3	; 0x03
    12aa:	21 fd       	sbrc	r18, 1
    12ac:	03 c0       	rjmp	.+6      	; 0x12b4 <fputc+0x16>
    12ae:	8f ef       	ldi	r24, 0xFF	; 255
    12b0:	9f ef       	ldi	r25, 0xFF	; 255
    12b2:	2c c0       	rjmp	.+88     	; 0x130c <fputc+0x6e>
    12b4:	22 ff       	sbrs	r18, 2
    12b6:	16 c0       	rjmp	.+44     	; 0x12e4 <fputc+0x46>
    12b8:	46 81       	ldd	r20, Z+6	; 0x06
    12ba:	57 81       	ldd	r21, Z+7	; 0x07
    12bc:	24 81       	ldd	r18, Z+4	; 0x04
    12be:	35 81       	ldd	r19, Z+5	; 0x05
    12c0:	42 17       	cp	r20, r18
    12c2:	53 07       	cpc	r21, r19
    12c4:	44 f4       	brge	.+16     	; 0x12d6 <fputc+0x38>
    12c6:	a0 81       	ld	r26, Z
    12c8:	b1 81       	ldd	r27, Z+1	; 0x01
    12ca:	9d 01       	movw	r18, r26
    12cc:	2f 5f       	subi	r18, 0xFF	; 255
    12ce:	3f 4f       	sbci	r19, 0xFF	; 255
    12d0:	31 83       	std	Z+1, r19	; 0x01
    12d2:	20 83       	st	Z, r18
    12d4:	8c 93       	st	X, r24
    12d6:	26 81       	ldd	r18, Z+6	; 0x06
    12d8:	37 81       	ldd	r19, Z+7	; 0x07
    12da:	2f 5f       	subi	r18, 0xFF	; 255
    12dc:	3f 4f       	sbci	r19, 0xFF	; 255
    12de:	37 83       	std	Z+7, r19	; 0x07
    12e0:	26 83       	std	Z+6, r18	; 0x06
    12e2:	14 c0       	rjmp	.+40     	; 0x130c <fputc+0x6e>
    12e4:	8b 01       	movw	r16, r22
    12e6:	ec 01       	movw	r28, r24
    12e8:	fb 01       	movw	r30, r22
    12ea:	00 84       	ldd	r0, Z+8	; 0x08
    12ec:	f1 85       	ldd	r31, Z+9	; 0x09
    12ee:	e0 2d       	mov	r30, r0
    12f0:	19 95       	eicall
    12f2:	89 2b       	or	r24, r25
    12f4:	e1 f6       	brne	.-72     	; 0x12ae <fputc+0x10>
    12f6:	d8 01       	movw	r26, r16
    12f8:	16 96       	adiw	r26, 0x06	; 6
    12fa:	8d 91       	ld	r24, X+
    12fc:	9c 91       	ld	r25, X
    12fe:	17 97       	sbiw	r26, 0x07	; 7
    1300:	01 96       	adiw	r24, 0x01	; 1
    1302:	17 96       	adiw	r26, 0x07	; 7
    1304:	9c 93       	st	X, r25
    1306:	8e 93       	st	-X, r24
    1308:	16 97       	sbiw	r26, 0x06	; 6
    130a:	ce 01       	movw	r24, r28
    130c:	df 91       	pop	r29
    130e:	cf 91       	pop	r28
    1310:	1f 91       	pop	r17
    1312:	0f 91       	pop	r16
    1314:	08 95       	ret

00001316 <__ultoa_invert>:
    1316:	fa 01       	movw	r30, r20
    1318:	aa 27       	eor	r26, r26
    131a:	28 30       	cpi	r18, 0x08	; 8
    131c:	51 f1       	breq	.+84     	; 0x1372 <__ultoa_invert+0x5c>
    131e:	20 31       	cpi	r18, 0x10	; 16
    1320:	81 f1       	breq	.+96     	; 0x1382 <__ultoa_invert+0x6c>
    1322:	e8 94       	clt
    1324:	6f 93       	push	r22
    1326:	6e 7f       	andi	r22, 0xFE	; 254
    1328:	6e 5f       	subi	r22, 0xFE	; 254
    132a:	7f 4f       	sbci	r23, 0xFF	; 255
    132c:	8f 4f       	sbci	r24, 0xFF	; 255
    132e:	9f 4f       	sbci	r25, 0xFF	; 255
    1330:	af 4f       	sbci	r26, 0xFF	; 255
    1332:	b1 e0       	ldi	r27, 0x01	; 1
    1334:	3e d0       	rcall	.+124    	; 0x13b2 <__ultoa_invert+0x9c>
    1336:	b4 e0       	ldi	r27, 0x04	; 4
    1338:	3c d0       	rcall	.+120    	; 0x13b2 <__ultoa_invert+0x9c>
    133a:	67 0f       	add	r22, r23
    133c:	78 1f       	adc	r23, r24
    133e:	89 1f       	adc	r24, r25
    1340:	9a 1f       	adc	r25, r26
    1342:	a1 1d       	adc	r26, r1
    1344:	68 0f       	add	r22, r24
    1346:	79 1f       	adc	r23, r25
    1348:	8a 1f       	adc	r24, r26
    134a:	91 1d       	adc	r25, r1
    134c:	a1 1d       	adc	r26, r1
    134e:	6a 0f       	add	r22, r26
    1350:	71 1d       	adc	r23, r1
    1352:	81 1d       	adc	r24, r1
    1354:	91 1d       	adc	r25, r1
    1356:	a1 1d       	adc	r26, r1
    1358:	20 d0       	rcall	.+64     	; 0x139a <__ultoa_invert+0x84>
    135a:	09 f4       	brne	.+2      	; 0x135e <__ultoa_invert+0x48>
    135c:	68 94       	set
    135e:	3f 91       	pop	r19
    1360:	2a e0       	ldi	r18, 0x0A	; 10
    1362:	26 9f       	mul	r18, r22
    1364:	11 24       	eor	r1, r1
    1366:	30 19       	sub	r19, r0
    1368:	30 5d       	subi	r19, 0xD0	; 208
    136a:	31 93       	st	Z+, r19
    136c:	de f6       	brtc	.-74     	; 0x1324 <__ultoa_invert+0xe>
    136e:	cf 01       	movw	r24, r30
    1370:	08 95       	ret
    1372:	46 2f       	mov	r20, r22
    1374:	47 70       	andi	r20, 0x07	; 7
    1376:	40 5d       	subi	r20, 0xD0	; 208
    1378:	41 93       	st	Z+, r20
    137a:	b3 e0       	ldi	r27, 0x03	; 3
    137c:	0f d0       	rcall	.+30     	; 0x139c <__ultoa_invert+0x86>
    137e:	c9 f7       	brne	.-14     	; 0x1372 <__ultoa_invert+0x5c>
    1380:	f6 cf       	rjmp	.-20     	; 0x136e <__ultoa_invert+0x58>
    1382:	46 2f       	mov	r20, r22
    1384:	4f 70       	andi	r20, 0x0F	; 15
    1386:	40 5d       	subi	r20, 0xD0	; 208
    1388:	4a 33       	cpi	r20, 0x3A	; 58
    138a:	18 f0       	brcs	.+6      	; 0x1392 <__ultoa_invert+0x7c>
    138c:	49 5d       	subi	r20, 0xD9	; 217
    138e:	31 fd       	sbrc	r19, 1
    1390:	40 52       	subi	r20, 0x20	; 32
    1392:	41 93       	st	Z+, r20
    1394:	02 d0       	rcall	.+4      	; 0x139a <__ultoa_invert+0x84>
    1396:	a9 f7       	brne	.-22     	; 0x1382 <__ultoa_invert+0x6c>
    1398:	ea cf       	rjmp	.-44     	; 0x136e <__ultoa_invert+0x58>
    139a:	b4 e0       	ldi	r27, 0x04	; 4
    139c:	a6 95       	lsr	r26
    139e:	97 95       	ror	r25
    13a0:	87 95       	ror	r24
    13a2:	77 95       	ror	r23
    13a4:	67 95       	ror	r22
    13a6:	ba 95       	dec	r27
    13a8:	c9 f7       	brne	.-14     	; 0x139c <__ultoa_invert+0x86>
    13aa:	00 97       	sbiw	r24, 0x00	; 0
    13ac:	61 05       	cpc	r22, r1
    13ae:	71 05       	cpc	r23, r1
    13b0:	08 95       	ret
    13b2:	9b 01       	movw	r18, r22
    13b4:	ac 01       	movw	r20, r24
    13b6:	0a 2e       	mov	r0, r26
    13b8:	06 94       	lsr	r0
    13ba:	57 95       	ror	r21
    13bc:	47 95       	ror	r20
    13be:	37 95       	ror	r19
    13c0:	27 95       	ror	r18
    13c2:	ba 95       	dec	r27
    13c4:	c9 f7       	brne	.-14     	; 0x13b8 <__ultoa_invert+0xa2>
    13c6:	62 0f       	add	r22, r18
    13c8:	73 1f       	adc	r23, r19
    13ca:	84 1f       	adc	r24, r20
    13cc:	95 1f       	adc	r25, r21
    13ce:	a0 1d       	adc	r26, r0
    13d0:	08 95       	ret

000013d2 <_exit>:
    13d2:	f8 94       	cli

000013d4 <__stop_program>:
    13d4:	ff cf       	rjmp	.-2      	; 0x13d4 <__stop_program>
